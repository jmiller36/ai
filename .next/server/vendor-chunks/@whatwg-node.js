/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@whatwg-node";
exports.ids = ["vendor-chunks/@whatwg-node"];
exports.modules = {

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(rsc)/./node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsZ0dBQXNCOztBQUV6RCxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQywrRUFBcUI7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLDBGQUF5Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUN6QztBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcGxlLXRvZG9zLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9jcmVhdGUtbm9kZS1wb255ZmlsbC5qcz9lMzBiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNob3VsZFNraXBQb255ZmlsbCA9IHJlcXVpcmUoJy4vc2hvdWxkU2tpcFBvbnlmaWxsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlTm9kZVBvbnlmaWxsKG9wdHMgPSB7fSkge1xuICBjb25zdCBwb255ZmlsbHMgPSB7fTtcbiAgXG4gIHBvbnlmaWxscy5VUkxQYXR0ZXJuID0gZ2xvYmFsVGhpcy5VUkxQYXR0ZXJuO1xuXG4gIC8vIFdlIGNhbGwgdGhpcyBwcmV2aW91c2x5IHRvIHBhdGNoIGBCdW5gXG4gIGlmICghcG9ueWZpbGxzLlVSTFBhdHRlcm4pIHtcbiAgICBjb25zdCB1cmxQYXR0ZXJuTW9kdWxlID0gcmVxdWlyZSgndXJscGF0dGVybi1wb2x5ZmlsbCcpO1xuICAgIHBvbnlmaWxscy5VUkxQYXR0ZXJuID0gdXJsUGF0dGVybk1vZHVsZS5VUkxQYXR0ZXJuO1xuICB9XG5cbiAgaWYgKG9wdHMuc2tpcFBvbnlmaWxsIHx8IHNob3VsZFNraXBQb255ZmlsbCgpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZldGNoOiBnbG9iYWxUaGlzLmZldGNoLFxuICAgICAgSGVhZGVyczogZ2xvYmFsVGhpcy5IZWFkZXJzLFxuICAgICAgUmVxdWVzdDogZ2xvYmFsVGhpcy5SZXF1ZXN0LFxuICAgICAgUmVzcG9uc2U6IGdsb2JhbFRoaXMuUmVzcG9uc2UsXG4gICAgICBGb3JtRGF0YTogZ2xvYmFsVGhpcy5Gb3JtRGF0YSxcbiAgICAgIFJlYWRhYmxlU3RyZWFtOiBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtLFxuICAgICAgV3JpdGFibGVTdHJlYW06IGdsb2JhbFRoaXMuV3JpdGFibGVTdHJlYW0sXG4gICAgICBUcmFuc2Zvcm1TdHJlYW06IGdsb2JhbFRoaXMuVHJhbnNmb3JtU3RyZWFtLFxuICAgICAgQ29tcHJlc3Npb25TdHJlYW06IGdsb2JhbFRoaXMuQ29tcHJlc3Npb25TdHJlYW0sXG4gICAgICBEZWNvbXByZXNzaW9uU3RyZWFtOiBnbG9iYWxUaGlzLkRlY29tcHJlc3Npb25TdHJlYW0sXG4gICAgICBCbG9iOiBnbG9iYWxUaGlzLkJsb2IsXG4gICAgICBGaWxlOiBnbG9iYWxUaGlzLkZpbGUsXG4gICAgICBjcnlwdG86IGdsb2JhbFRoaXMuY3J5cHRvLFxuICAgICAgYnRvYTogZ2xvYmFsVGhpcy5idG9hLFxuICAgICAgVGV4dEVuY29kZXI6IGdsb2JhbFRoaXMuVGV4dEVuY29kZXIsXG4gICAgICBUZXh0RGVjb2RlcjogZ2xvYmFsVGhpcy5UZXh0RGVjb2RlcixcbiAgICAgIFVSTFBhdHRlcm46IHBvbnlmaWxscy5VUkxQYXR0ZXJuLFxuICAgICAgVVJMOiBnbG9iYWxUaGlzLlVSTCxcbiAgICAgIFVSTFNlYXJjaFBhcmFtczogZ2xvYmFsVGhpcy5VUkxTZWFyY2hQYXJhbXNcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgbmV3Tm9kZUZldGNoID0gcmVxdWlyZSgnQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gnKTtcblxuICBwb255ZmlsbHMuZmV0Y2ggPSBuZXdOb2RlRmV0Y2guZmV0Y2g7XG4gIHBvbnlmaWxscy5SZXF1ZXN0ID0gbmV3Tm9kZUZldGNoLlJlcXVlc3Q7XG4gIHBvbnlmaWxscy5SZXNwb25zZSA9IG5ld05vZGVGZXRjaC5SZXNwb25zZTtcbiAgcG9ueWZpbGxzLkhlYWRlcnMgPSBuZXdOb2RlRmV0Y2guSGVhZGVycztcbiAgcG9ueWZpbGxzLkZvcm1EYXRhID0gbmV3Tm9kZUZldGNoLkZvcm1EYXRhO1xuICBwb255ZmlsbHMuUmVhZGFibGVTdHJlYW0gPSBuZXdOb2RlRmV0Y2guUmVhZGFibGVTdHJlYW07XG5cbiAgcG9ueWZpbGxzLlVSTCA9IG5ld05vZGVGZXRjaC5VUkw7XG4gIHBvbnlmaWxscy5VUkxTZWFyY2hQYXJhbXMgPSBuZXdOb2RlRmV0Y2guVVJMU2VhcmNoUGFyYW1zO1xuXG4gIHBvbnlmaWxscy5Xcml0YWJsZVN0cmVhbSA9IG5ld05vZGVGZXRjaC5Xcml0YWJsZVN0cmVhbTtcbiAgcG9ueWZpbGxzLlRyYW5zZm9ybVN0cmVhbSA9IG5ld05vZGVGZXRjaC5UcmFuc2Zvcm1TdHJlYW07XG4gIHBvbnlmaWxscy5Db21wcmVzc2lvblN0cmVhbSA9IG5ld05vZGVGZXRjaC5Db21wcmVzc2lvblN0cmVhbTtcbiAgcG9ueWZpbGxzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBuZXdOb2RlRmV0Y2guRGVjb21wcmVzc2lvblN0cmVhbTtcblxuICBwb255ZmlsbHMuQmxvYiA9IG5ld05vZGVGZXRjaC5CbG9iO1xuICBwb255ZmlsbHMuRmlsZSA9IG5ld05vZGVGZXRjaC5GaWxlO1xuICBwb255ZmlsbHMuY3J5cHRvID0gZ2xvYmFsVGhpcy5jcnlwdG87XG4gIHBvbnlmaWxscy5idG9hID0gbmV3Tm9kZUZldGNoLmJ0b2E7XG4gIHBvbnlmaWxscy5UZXh0RW5jb2RlciA9IG5ld05vZGVGZXRjaC5UZXh0RW5jb2RlcjtcbiAgcG9ueWZpbGxzLlRleHREZWNvZGVyID0gbmV3Tm9kZUZldGNoLlRleHREZWNvZGVyO1xuXG4gIGlmIChvcHRzLmZvcm1EYXRhTGltaXRzKSB7XG4gICAgcG9ueWZpbGxzLkJvZHkgPSBjbGFzcyBCb2R5IGV4dGVuZHMgbmV3Tm9kZUZldGNoLkJvZHkge1xuICAgICAgY29uc3RydWN0b3IoYm9keSwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoYm9keSwge1xuICAgICAgICAgIGZvcm1EYXRhTGltaXRzOiBvcHRzLmZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgIC4uLnVzZXJPcHRzLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcG9ueWZpbGxzLlJlcXVlc3QgPSBjbGFzcyBSZXF1ZXN0IGV4dGVuZHMgbmV3Tm9kZUZldGNoLlJlcXVlc3Qge1xuICAgICAgY29uc3RydWN0b3IoaW5wdXQsIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGlucHV0LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBwb255ZmlsbHMuUmVzcG9uc2UgPSBjbGFzcyBSZXNwb25zZSBleHRlbmRzIG5ld05vZGVGZXRjaC5SZXNwb25zZSB7XG4gICAgICBjb25zdHJ1Y3Rvcihib2R5LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihib2R5LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmICghcG9ueWZpbGxzLmNyeXB0bykge1xuICAgIGNvbnN0IGNyeXB0b01vZHVsZSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG4gICAgcG9ueWZpbGxzLmNyeXB0byA9IGNyeXB0b01vZHVsZS53ZWJjcnlwdG87XG4gIH1cblxuICByZXR1cm4gcG9ueWZpbGxzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(rsc)/./node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsb0dBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLGdHQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsbUZBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQiw4QkFBOEI7O0FBRTlCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L25vZGUtcG9ueWZpbGwuanM/M2EzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IGNyZWF0ZU5vZGVQb255ZmlsbCA9IHJlcXVpcmUoJy4vY3JlYXRlLW5vZGUtcG9ueWZpbGwnKTtcbmNvbnN0IHNob3VsZFNraXBQb255ZmlsbCA9IHJlcXVpcmUoJy4vc2hvdWxkU2tpcFBvbnlmaWxsJyk7XG5jb25zdCBwb255ZmlsbHMgPSBjcmVhdGVOb2RlUG9ueWZpbGwoKTtcblxuaWYgKCFzaG91bGRTa2lwUG9ueWZpbGwoKSkge1xuICB0cnkge1xuICAgIGNvbnN0IG5vZGVsaWJjdXJsTmFtZSA9ICdub2RlLWxpYmN1cmwnXG4gICAgZ2xvYmFsVGhpcy5saWJjdXJsID0gZ2xvYmFsVGhpcy5saWJjdXJsIHx8IHJlcXVpcmUobm9kZWxpYmN1cmxOYW1lKTtcbiAgfSBjYXRjaCAoZSkgeyB9XG59XG5cbm1vZHVsZS5leHBvcnRzLmZldGNoID0gcG9ueWZpbGxzLmZldGNoO1xubW9kdWxlLmV4cG9ydHMuSGVhZGVycyA9IHBvbnlmaWxscy5IZWFkZXJzO1xubW9kdWxlLmV4cG9ydHMuUmVxdWVzdCA9IHBvbnlmaWxscy5SZXF1ZXN0O1xubW9kdWxlLmV4cG9ydHMuUmVzcG9uc2UgPSBwb255ZmlsbHMuUmVzcG9uc2U7XG5tb2R1bGUuZXhwb3J0cy5Gb3JtRGF0YSA9IHBvbnlmaWxscy5Gb3JtRGF0YTtcbm1vZHVsZS5leHBvcnRzLlJlYWRhYmxlU3RyZWFtID0gcG9ueWZpbGxzLlJlYWRhYmxlU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuV3JpdGFibGVTdHJlYW0gPSBwb255ZmlsbHMuV3JpdGFibGVTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5UcmFuc2Zvcm1TdHJlYW0gPSBwb255ZmlsbHMuVHJhbnNmb3JtU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuQ29tcHJlc3Npb25TdHJlYW0gPSBwb255ZmlsbHMuQ29tcHJlc3Npb25TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5EZWNvbXByZXNzaW9uU3RyZWFtID0gcG9ueWZpbGxzLkRlY29tcHJlc3Npb25TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5CbG9iID0gcG9ueWZpbGxzLkJsb2I7XG5tb2R1bGUuZXhwb3J0cy5GaWxlID0gcG9ueWZpbGxzLkZpbGU7XG5tb2R1bGUuZXhwb3J0cy5jcnlwdG8gPSBwb255ZmlsbHMuY3J5cHRvO1xubW9kdWxlLmV4cG9ydHMuYnRvYSA9IHBvbnlmaWxscy5idG9hO1xubW9kdWxlLmV4cG9ydHMuVGV4dEVuY29kZXIgPSBwb255ZmlsbHMuVGV4dEVuY29kZXI7XG5tb2R1bGUuZXhwb3J0cy5UZXh0RGVjb2RlciA9IHBvbnlmaWxscy5UZXh0RGVjb2Rlcjtcbm1vZHVsZS5leHBvcnRzLlVSTFBhdHRlcm4gPSBwb255ZmlsbHMuVVJMUGF0dGVybjtcbm1vZHVsZS5leHBvcnRzLlVSTCA9IHBvbnlmaWxscy5VUkw7XG5tb2R1bGUuZXhwb3J0cy5VUkxTZWFyY2hQYXJhbXMgPSBwb255ZmlsbHMuVVJMU2VhcmNoUGFyYW1zO1xuXG5leHBvcnRzLmNyZWF0ZUZldGNoID0gY3JlYXRlTm9kZVBvbnlmaWxsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  // Bun and Deno already have a Fetch API\n  if (globalThis.Deno) {\n    return true\n  }\n  if (process.versions.bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcGxlLXRvZG9zLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9zaG91bGRTa2lwUG9ueWZpbGwuanM/YzAwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmZ1bmN0aW9uIGlzTmV4dEpzKCkge1xuICByZXR1cm4gT2JqZWN0LmtleXMoZ2xvYmFsVGhpcykuc29tZShrZXkgPT4ga2V5LnN0YXJ0c1dpdGgoJ19fTkVYVCcpKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNob3VsZFNraXBQb255ZmlsbCgpIHtcbiAgLy8gQnVuIGFuZCBEZW5vIGFscmVhZHkgaGF2ZSBhIEZldGNoIEFQSVxuICBpZiAoZ2xvYmFsVGhpcy5EZW5vKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICBpZiAocHJvY2Vzcy52ZXJzaW9ucy5idW4pIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChpc05leHRKcygpKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/events/cjs/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/events/cjs/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomEvent = void 0;\nexports.CustomEvent = globalThis.CustomEvent ||\n    class PonyfillCustomEvent extends Event {\n        detail = null;\n        constructor(type, eventInitDict) {\n            super(type, eventInitDict);\n            if (eventInitDict?.detail != null) {\n                this.detail = eventInitDict.detail;\n            }\n        }\n        initCustomEvent(type, bubbles, cancelable, detail) {\n            this.initEvent(type, bubbles, cancelable);\n            if (detail != null) {\n                this.detail = detail;\n            }\n        }\n    };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2V2ZW50cy9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcGxlLXRvZG9zLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZXZlbnRzL2Nqcy9pbmRleC5qcz85NTc4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DdXN0b21FdmVudCA9IHZvaWQgMDtcbmV4cG9ydHMuQ3VzdG9tRXZlbnQgPSBnbG9iYWxUaGlzLkN1c3RvbUV2ZW50IHx8XG4gICAgY2xhc3MgUG9ueWZpbGxDdXN0b21FdmVudCBleHRlbmRzIEV2ZW50IHtcbiAgICAgICAgZGV0YWlsID0gbnVsbDtcbiAgICAgICAgY29uc3RydWN0b3IodHlwZSwgZXZlbnRJbml0RGljdCkge1xuICAgICAgICAgICAgc3VwZXIodHlwZSwgZXZlbnRJbml0RGljdCk7XG4gICAgICAgICAgICBpZiAoZXZlbnRJbml0RGljdD8uZGV0YWlsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRldGFpbCA9IGV2ZW50SW5pdERpY3QuZGV0YWlsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGluaXRDdXN0b21FdmVudCh0eXBlLCBidWJibGVzLCBjYW5jZWxhYmxlLCBkZXRhaWwpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdEV2ZW50KHR5cGUsIGJ1YmJsZXMsIGNhbmNlbGFibGUpO1xuICAgICAgICAgICAgaWYgKGRldGFpbCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZXRhaWwgPSBkZXRhaWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/events/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(rsc)/./node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0JvZHkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLHlDQUF5QyxtQkFBTyxDQUFDLHdEQUFRO0FBQ3pELGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDLHNCQUFzQixtQkFBTyxDQUFDLG1GQUFlO0FBQzdDLDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RCxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQ0FBb0M7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSxnQkFBZ0IsNERBQTREO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsMkNBQTJDLCtCQUErQjtBQUMxRTtBQUNBLGtFQUFrRSwrQkFBK0I7QUFDakc7QUFDQTtBQUNBLG1FQUFtRSwyQkFBMkI7QUFDOUY7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLDJEQUEyRCx1QkFBdUI7QUFDbEYsYUFBYTtBQUNiLCtDQUErQyxvQkFBb0I7QUFDbkU7QUFDQTtBQUNBLGtFQUFrRSwwQkFBMEI7QUFDNUYsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLHNFQUFzRSwwQkFBMEI7QUFDaEc7QUFDQSxnRkFBZ0YsZ0JBQWdCO0FBQ2hHO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBLDBEQUEwRCxzQkFBc0I7QUFDaEYsYUFBYTtBQUNiO0FBQ0EsMERBQTBELHNCQUFzQjtBQUNoRixhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsS0FBSztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSwrREFBK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsV0FBVyxTQUFTO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Cb2R5LmpzP2ViNDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsQm9keSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCJzdHJlYW1cIik7XG5jb25zdCBidXNib3lfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJidXNib3lcIikpO1xuY29uc3QgQmxvYl9qc18xID0gcmVxdWlyZShcIi4vQmxvYi5qc1wiKTtcbmNvbnN0IEZpbGVfanNfMSA9IHJlcXVpcmUoXCIuL0ZpbGUuanNcIik7XG5jb25zdCBGb3JtRGF0YV9qc18xID0gcmVxdWlyZShcIi4vRm9ybURhdGEuanNcIik7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG52YXIgQm9keUluaXRUeXBlO1xuKGZ1bmN0aW9uIChCb2R5SW5pdFR5cGUpIHtcbiAgICBCb2R5SW5pdFR5cGVbXCJSZWFkYWJsZVN0cmVhbVwiXSA9IFwiUmVhZGFibGVTdHJlYW1cIjtcbiAgICBCb2R5SW5pdFR5cGVbXCJCbG9iXCJdID0gXCJCbG9iXCI7XG4gICAgQm9keUluaXRUeXBlW1wiRm9ybURhdGFcIl0gPSBcIkZvcm1EYXRhXCI7XG4gICAgQm9keUluaXRUeXBlW1wiU3RyaW5nXCJdID0gXCJTdHJpbmdcIjtcbiAgICBCb2R5SW5pdFR5cGVbXCJSZWFkYWJsZVwiXSA9IFwiUmVhZGFibGVcIjtcbiAgICBCb2R5SW5pdFR5cGVbXCJCdWZmZXJcIl0gPSBcIkJ1ZmZlclwiO1xufSkoQm9keUluaXRUeXBlIHx8IChCb2R5SW5pdFR5cGUgPSB7fSkpO1xuY2xhc3MgUG9ueWZpbGxCb2R5IHtcbiAgICBib2R5SW5pdDtcbiAgICBvcHRpb25zO1xuICAgIGJvZHlVc2VkID0gZmFsc2U7XG4gICAgY29udGVudFR5cGUgPSBudWxsO1xuICAgIGNvbnRlbnRMZW5ndGggPSBudWxsO1xuICAgIGNvbnN0cnVjdG9yKGJvZHlJbml0LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgdGhpcy5ib2R5SW5pdCA9IGJvZHlJbml0O1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICBjb25zdCB7IGJvZHlGYWN0b3J5LCBjb250ZW50VHlwZSwgY29udGVudExlbmd0aCwgYm9keVR5cGUsIGJ1ZmZlciB9ID0gcHJvY2Vzc0JvZHlJbml0KGJvZHlJbml0KTtcbiAgICAgICAgdGhpcy5fYm9keUZhY3RvcnkgPSBib2R5RmFjdG9yeTtcbiAgICAgICAgdGhpcy5jb250ZW50VHlwZSA9IGNvbnRlbnRUeXBlO1xuICAgICAgICB0aGlzLmNvbnRlbnRMZW5ndGggPSBjb250ZW50TGVuZ3RoO1xuICAgICAgICB0aGlzLmJvZHlUeXBlID0gYm9keVR5cGU7XG4gICAgICAgIHRoaXMuX2J1ZmZlciA9IGJ1ZmZlcjtcbiAgICB9XG4gICAgYm9keVR5cGU7XG4gICAgX2JvZHlGYWN0b3J5ID0gKCkgPT4gbnVsbDtcbiAgICBfZ2VuZXJhdGVkQm9keSA9IG51bGw7XG4gICAgX2J1ZmZlcjtcbiAgICBnZW5lcmF0ZUJvZHkoKSB7XG4gICAgICAgIGlmICh0aGlzLl9nZW5lcmF0ZWRCb2R5Py5yZWFkYWJsZT8uZGVzdHJveWVkICYmIHRoaXMuX2J1ZmZlcikge1xuICAgICAgICAgICAgdGhpcy5fZ2VuZXJhdGVkQm9keS5yZWFkYWJsZSA9IHN0cmVhbV8xLlJlYWRhYmxlLmZyb20odGhpcy5fYnVmZmVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fZ2VuZXJhdGVkQm9keSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2dlbmVyYXRlZEJvZHk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYm9keSA9IHRoaXMuX2JvZHlGYWN0b3J5KCk7XG4gICAgICAgIHRoaXMuX2dlbmVyYXRlZEJvZHkgPSBib2R5O1xuICAgICAgICByZXR1cm4gYm9keTtcbiAgICB9XG4gICAgaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcihmb3JjZVNldCA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlSW5IZWFkZXJzID0gdGhpcy5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJyk7XG4gICAgICAgIGlmICghY29udGVudFR5cGVJbkhlYWRlcnMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbnRlbnRUeXBlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgdGhpcy5jb250ZW50VHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRUeXBlID0gY29udGVudFR5cGVJbkhlYWRlcnM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29udGVudExlbmd0aEluSGVhZGVycyA9IHRoaXMuaGVhZGVycy5nZXQoJ2NvbnRlbnQtbGVuZ3RoJyk7XG4gICAgICAgIGlmIChmb3JjZVNldCAmJiB0aGlzLmJvZHlJbml0ID09IG51bGwgJiYgIWNvbnRlbnRMZW5ndGhJbkhlYWRlcnMpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGVudExlbmd0aCA9IDA7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LWxlbmd0aCcsICcwJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFjb250ZW50TGVuZ3RoSW5IZWFkZXJzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jb250ZW50TGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5oZWFkZXJzLnNldCgnY29udGVudC1sZW5ndGgnLCB0aGlzLmNvbnRlbnRMZW5ndGgudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRMZW5ndGggPSBwYXJzZUludChjb250ZW50TGVuZ3RoSW5IZWFkZXJzLCAxMCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IGJvZHkoKSB7XG4gICAgICAgIGNvbnN0IF9ib2R5ID0gdGhpcy5nZW5lcmF0ZUJvZHkoKTtcbiAgICAgICAgaWYgKF9ib2R5ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvbnlmaWxsUmVhZGFibGVTdHJlYW0gPSBfYm9keTtcbiAgICAgICAgICAgIGNvbnN0IHJlYWRhYmxlID0gX2JvZHkucmVhZGFibGU7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb3h5KF9ib2R5LnJlYWRhYmxlLCB7XG4gICAgICAgICAgICAgICAgZ2V0KF8sIHByb3ApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3AgaW4gcG9ueWZpbGxSZWFkYWJsZVN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9ueWZpbGxSZWFkYWJsZVN0cmVhbVByb3AgPSBwb255ZmlsbFJlYWRhYmxlU3RyZWFtW3Byb3BdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwb255ZmlsbFJlYWRhYmxlU3RyZWFtUHJvcCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwb255ZmlsbFJlYWRhYmxlU3RyZWFtUHJvcC5iaW5kKHBvbnlmaWxsUmVhZGFibGVTdHJlYW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBvbnlmaWxsUmVhZGFibGVTdHJlYW1Qcm9wO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9wIGluIHJlYWRhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWFkYWJsZVByb3AgPSByZWFkYWJsZVtwcm9wXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcmVhZGFibGVQcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYWRhYmxlUHJvcC5iaW5kKHJlYWRhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWFkYWJsZVByb3A7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIF9jaHVua3MgPSBudWxsO1xuICAgIF9jb2xsZWN0Q2h1bmtzRnJvbVJlYWRhYmxlKCkge1xuICAgICAgICBpZiAodGhpcy5fY2h1bmtzKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2NodW5rcyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgX2JvZHkgPSB0aGlzLmdlbmVyYXRlQm9keSgpO1xuICAgICAgICBpZiAoIV9ib2R5KSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKFtdKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jaHVua3MgPSBbXTtcbiAgICAgICAgX2JvZHkucmVhZGFibGUub24oJ2RhdGEnLCBjaHVuayA9PiB7XG4gICAgICAgICAgICB0aGlzLl9jaHVua3MucHVzaChjaHVuayk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgX2JvZHkucmVhZGFibGUub25jZSgnZW5kJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcy5fY2h1bmtzKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgX2JvZHkucmVhZGFibGUub25jZSgnZXJyb3InLCBlID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9ibG9iID0gbnVsbDtcbiAgICBibG9iKCkge1xuICAgICAgICBpZiAodGhpcy5fYmxvYikge1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl9ibG9iKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ib2R5VHlwZSA9PT0gQm9keUluaXRUeXBlLkJsb2IpIHtcbiAgICAgICAgICAgIHRoaXMuX2Jsb2IgPSB0aGlzLmJvZHlJbml0O1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl9ibG9iKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fYnVmZmVyKSB7XG4gICAgICAgICAgICB0aGlzLl9ibG9iID0gbmV3IEJsb2JfanNfMS5Qb255ZmlsbEJsb2IoW3RoaXMuX2J1ZmZlcl0sIHtcbiAgICAgICAgICAgICAgICB0eXBlOiB0aGlzLmNvbnRlbnRUeXBlIHx8ICcnLFxuICAgICAgICAgICAgICAgIHNpemU6IHRoaXMuY29udGVudExlbmd0aCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl9ibG9iKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fY29sbGVjdENodW5rc0Zyb21SZWFkYWJsZSgpLnRoZW4oY2h1bmtzID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2Jsb2IgPSBuZXcgQmxvYl9qc18xLlBvbnlmaWxsQmxvYihjaHVua3MsIHtcbiAgICAgICAgICAgICAgICB0eXBlOiB0aGlzLmNvbnRlbnRUeXBlIHx8ICcnLFxuICAgICAgICAgICAgICAgIHNpemU6IHRoaXMuY29udGVudExlbmd0aCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Jsb2I7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfZm9ybURhdGEgPSBudWxsO1xuICAgIGZvcm1EYXRhKG9wdHMpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Zvcm1EYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2Zvcm1EYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ib2R5VHlwZSA9PT0gQm9keUluaXRUeXBlLkZvcm1EYXRhKSB7XG4gICAgICAgICAgICB0aGlzLl9mb3JtRGF0YSA9IHRoaXMuYm9keUluaXQ7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2Zvcm1EYXRhKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9mb3JtRGF0YSA9IG5ldyBGb3JtRGF0YV9qc18xLlBvbnlmaWxsRm9ybURhdGEoKTtcbiAgICAgICAgY29uc3QgX2JvZHkgPSB0aGlzLmdlbmVyYXRlQm9keSgpO1xuICAgICAgICBpZiAoX2JvZHkgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl9mb3JtRGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZm9ybURhdGFMaW1pdHMgPSB7XG4gICAgICAgICAgICAuLi50aGlzLm9wdGlvbnMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgICAuLi5vcHRzPy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGJiID0gKDAsIGJ1c2JveV8xLmRlZmF1bHQpKHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiB0aGlzLmNvbnRlbnRUeXBlIHx8ICcnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbGltaXRzOiBmb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAgICAgICBkZWZQYXJhbUNoYXJzZXQ6ICd1dGYtOCcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJiLm9uKCdmaWVsZCcsIChuYW1lLCB2YWx1ZSwgeyBuYW1lVHJ1bmNhdGVkLCB2YWx1ZVRydW5jYXRlZCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG5hbWVUcnVuY2F0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmllbGQgbmFtZSBzaXplIGV4Y2VlZGVkOiAke2Zvcm1EYXRhTGltaXRzPy5maWVsZE5hbWVTaXplfSBieXRlc2ApKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlVHJ1bmNhdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEZpZWxkIHZhbHVlIHNpemUgZXhjZWVkZWQ6ICR7Zm9ybURhdGFMaW1pdHM/LmZpZWxkU2l6ZX0gYnl0ZXNgKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX2Zvcm1EYXRhLnNldChuYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJiLm9uKCdmaWVsZHNMaW1pdCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBGaWVsZHMgbGltaXQgZXhjZWVkZWQ6ICR7Zm9ybURhdGFMaW1pdHM/LmZpZWxkc31gKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJiLm9uKCdmaWxlJywgKG5hbWUsIGZpbGVTdHJlYW0sIHsgZmlsZW5hbWUsIG1pbWVUeXBlIH0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjaHVua3MgPSBbXTtcbiAgICAgICAgICAgICAgICBmaWxlU3RyZWFtLm9uKCdsaW1pdCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmlsZSBzaXplIGxpbWl0IGV4Y2VlZGVkOiAke2Zvcm1EYXRhTGltaXRzPy5maWxlU2l6ZX0gYnl0ZXNgKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZmlsZVN0cmVhbS5vbignZGF0YScsIGNodW5rID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY2h1bmtzLnB1c2goY2h1bmspO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGZpbGVTdHJlYW0ub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZVN0cmVhbS50cnVuY2F0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEZpbGUgc2l6ZSBsaW1pdCBleGNlZWRlZDogJHtmb3JtRGF0YUxpbWl0cz8uZmlsZVNpemV9IGJ5dGVzYCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBuZXcgRmlsZV9qc18xLlBvbnlmaWxsRmlsZShjaHVua3MsIGZpbGVuYW1lLCB7IHR5cGU6IG1pbWVUeXBlIH0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9mb3JtRGF0YS5zZXQobmFtZSwgZmlsZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJiLm9uKCdmaWxlc0xpbWl0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEZpbGVzIGxpbWl0IGV4Y2VlZGVkOiAke2Zvcm1EYXRhTGltaXRzPy5maWxlc31gKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJiLm9uKCdwYXJ0c0xpbWl0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYFBhcnRzIGxpbWl0IGV4Y2VlZGVkOiAke2Zvcm1EYXRhTGltaXRzPy5wYXJ0c31gKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJiLm9uKCdjbG9zZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMuX2Zvcm1EYXRhKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ2Vycm9yJywgKGVyciA9ICdBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBwYXJzaW5nIHRoZSBmb3JtIGRhdGEnKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyTWVzc2FnZSA9IGVyci5tZXNzYWdlIHx8IGVyci50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgVHlwZUVycm9yKGVyck1lc3NhZ2UsIGVyci5jYXVzZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBfYm9keT8ucmVhZGFibGUucGlwZShiYik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBidWZmZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLl9idWZmZXIpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodGhpcy5fYnVmZmVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ib2R5VHlwZSA9PT0gQm9keUluaXRUeXBlLkJsb2IpIHtcbiAgICAgICAgICAgIGlmICgoMCwgQmxvYl9qc18xLmhhc0J1ZmZlck1ldGhvZCkodGhpcy5ib2R5SW5pdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ib2R5SW5pdC5idWZmZXIoKS50aGVuKGJ1ZiA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlciA9IGJ1ZjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlcjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoMCwgQmxvYl9qc18xLmhhc0J5dGVzTWV0aG9kKSh0aGlzLmJvZHlJbml0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmJvZHlJbml0LmJ5dGVzKCkudGhlbihieXRlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlciA9IEJ1ZmZlci5mcm9tKGJ5dGVzKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlcjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgoMCwgQmxvYl9qc18xLmhhc0FycmF5QnVmZmVyTWV0aG9kKSh0aGlzLmJvZHlJbml0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmJvZHlJbml0LmFycmF5QnVmZmVyKCkudGhlbihidWYgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9idWZmZXIgPSBCdWZmZXIuZnJvbShidWYsIHVuZGVmaW5lZCwgYnVmLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnVmZmVyO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2xsZWN0Q2h1bmtzRnJvbVJlYWRhYmxlKCkudGhlbihjaHVua3MgPT4ge1xuICAgICAgICAgICAgaWYgKGNodW5rcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9idWZmZXIgPSBjaHVua3NbMF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX2J1ZmZlciA9IEJ1ZmZlci5jb25jYXQoY2h1bmtzKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9idWZmZXI7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBieXRlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyKCk7XG4gICAgfVxuICAgIGFycmF5QnVmZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWZmZXIoKTtcbiAgICB9XG4gICAgX2pzb24gPSBudWxsO1xuICAgIGpzb24oKSB7XG4gICAgICAgIGlmICh0aGlzLl9qc29uKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2pzb24pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnRleHQoKS50aGVuKHRleHQgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9qc29uID0gSlNPTi5wYXJzZSh0ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBTeW50YXhFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBlLm1lc3NhZ2UgKz0gYCwgXCIke3RleHR9XCIgaXMgbm90IHZhbGlkIEpTT05gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2pzb247XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfdGV4dCA9IG51bGw7XG4gICAgdGV4dCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX3RleHQpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodGhpcy5fdGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYm9keVR5cGUgPT09IEJvZHlJbml0VHlwZS5TdHJpbmcpIHtcbiAgICAgICAgICAgIHRoaXMuX3RleHQgPSB0aGlzLmJvZHlJbml0O1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl90ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5idWZmZXIoKS50aGVuKGJ1ZmZlciA9PiB7XG4gICAgICAgICAgICB0aGlzLl90ZXh0ID0gYnVmZmVyLnRvU3RyaW5nKCd1dGYtOCcpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RleHQ7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxCb2R5ID0gUG9ueWZpbGxCb2R5O1xuZnVuY3Rpb24gcHJvY2Vzc0JvZHlJbml0KGJvZHlJbml0KSB7XG4gICAgaWYgKGJvZHlJbml0ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5OiAoKSA9PiBudWxsLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IG51bGwsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBudWxsLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGJvZHlJbml0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShib2R5SW5pdCk7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRMZW5ndGggPSBidWZmZXIuYnl0ZUxlbmd0aDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuU3RyaW5nLFxuICAgICAgICAgICAgY29udGVudFR5cGU6ICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnLFxuICAgICAgICAgICAgY29udGVudExlbmd0aCxcbiAgICAgICAgICAgIGJ1ZmZlcixcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5KCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRhYmxlID0gc3RyZWFtXzEuUmVhZGFibGUuZnJvbShidWZmZXIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHJlYWRhYmxlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoYm9keUluaXQpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5VHlwZTogQm9keUluaXRUeXBlLkJ1ZmZlcixcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBudWxsLFxuICAgICAgICAgICAgY29udGVudExlbmd0aDogYm9keUluaXQubGVuZ3RoLFxuICAgICAgICAgICAgYnVmZmVyOiBib2R5SW5pdCxcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5KCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRhYmxlID0gc3RyZWFtXzEuUmVhZGFibGUuZnJvbShib2R5SW5pdCk7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0ocmVhZGFibGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBib2R5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKCgwLCB1dGlsc19qc18xLmlzQXJyYXlCdWZmZXJWaWV3KShib2R5SW5pdCkpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmZyb20oYm9keUluaXQuYnVmZmVyLCBib2R5SW5pdC5ieXRlT2Zmc2V0LCBib2R5SW5pdC5ieXRlTGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuQnVmZmVyLFxuICAgICAgICAgICAgY29udGVudExlbmd0aDogYm9keUluaXQuYnl0ZUxlbmd0aCxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBudWxsLFxuICAgICAgICAgICAgYnVmZmVyLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVhZGFibGUgPSBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tKGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0ocmVhZGFibGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBib2R5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGJvZHlJbml0IGluc3RhbmNlb2YgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtICYmIGJvZHlJbml0LnJlYWRhYmxlICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuUmVhZGFibGVTdHJlYW0sXG4gICAgICAgICAgICBib2R5RmFjdG9yeTogKCkgPT4gYm9keUluaXQsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogbnVsbCxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IG51bGwsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChpc0Jsb2IoYm9keUluaXQpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5VHlwZTogQm9keUluaXRUeXBlLkJsb2IsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogYm9keUluaXQudHlwZSxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IGJvZHlJbml0LnNpemUsXG4gICAgICAgICAgICBib2R5RmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9keUluaXQuc3RyZWFtKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoYm9keUluaXQgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgICAgICBjb25zdCBjb250ZW50TGVuZ3RoID0gYm9keUluaXQuYnl0ZUxlbmd0aDtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmZyb20oYm9keUluaXQsIHVuZGVmaW5lZCwgYm9keUluaXQuYnl0ZUxlbmd0aCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5VHlwZTogQm9keUluaXRUeXBlLkJ1ZmZlcixcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBudWxsLFxuICAgICAgICAgICAgY29udGVudExlbmd0aCxcbiAgICAgICAgICAgIGJ1ZmZlcixcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5KCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRhYmxlID0gc3RyZWFtXzEuUmVhZGFibGUuZnJvbShidWZmZXIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHJlYWRhYmxlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9keTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChib2R5SW5pdCBpbnN0YW5jZW9mIHN0cmVhbV8xLlJlYWRhYmxlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5VHlwZTogQm9keUluaXRUeXBlLlJlYWRhYmxlLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IG51bGwsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBudWxsLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0oYm9keUluaXQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBib2R5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzVVJMU2VhcmNoUGFyYW1zKGJvZHlJbml0KSkge1xuICAgICAgICBjb25zdCBjb250ZW50VHlwZSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD1VVEYtOCc7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5VHlwZTogQm9keUluaXRUeXBlLlN0cmluZyxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlLFxuICAgICAgICAgICAgY29udGVudExlbmd0aDogbnVsbCxcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5KCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHN0cmVhbV8xLlJlYWRhYmxlLmZyb20oYm9keUluaXQudG9TdHJpbmcoKSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBib2R5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzRm9ybURhdGEoYm9keUluaXQpKSB7XG4gICAgICAgIGNvbnN0IGJvdW5kYXJ5ID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIpO1xuICAgICAgICBjb25zdCBjb250ZW50VHlwZSA9IGBtdWx0aXBhcnQvZm9ybS1kYXRhOyBib3VuZGFyeT0ke2JvdW5kYXJ5fWA7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBib2R5VHlwZTogQm9keUluaXRUeXBlLkZvcm1EYXRhLFxuICAgICAgICAgICAgY29udGVudFR5cGUsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBudWxsLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgwLCBGb3JtRGF0YV9qc18xLmdldFN0cmVhbUZyb21Gb3JtRGF0YSkoYm9keUluaXQsIGJvdW5kYXJ5KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChpc1JlYWRhYmxlU3RyZWFtKGJvZHlJbml0KSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29udGVudFR5cGU6IG51bGwsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBudWxsLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0oYm9keUluaXQpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGJvZHlJbml0W1N5bWJvbC5pdGVyYXRvcl0gfHwgYm9keUluaXRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb250ZW50VHlwZTogbnVsbCxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IG51bGwsXG4gICAgICAgICAgICBib2R5RmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZWFkYWJsZSA9IHN0cmVhbV8xLlJlYWRhYmxlLmZyb20oYm9keUluaXQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHJlYWRhYmxlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBib2R5IHR5cGUnKTtcbn1cbmZ1bmN0aW9uIGlzRm9ybURhdGEodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LmZvckVhY2ggIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzQmxvYih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uc3RyZWFtICE9IG51bGw7XG59XG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uc29ydCAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNSZWFkYWJsZVN0cmVhbSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZ2V0UmVhZGVyICE9IG51bGw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcGxlLXRvZG9zLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvQ29tcHJlc3Npb25TdHJlYW0uanM/OTFiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IG5vZGVfemxpYl8xID0gcmVxdWlyZShcIm5vZGU6emxpYlwiKTtcbmNvbnN0IFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICBzdGF0aWMgc3VwcG9ydGVkRm9ybWF0cyA9IGdsb2JhbFRoaXMucHJvY2Vzcz8udmVyc2lvbj8uc3RhcnRzV2l0aCgndjInKVxuICAgICAgICA/IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2JyJ11cbiAgICAgICAgOiBbJ2d6aXAnLCAnZGVmbGF0ZScsICdkZWZsYXRlLXJhdycsICdiciddO1xuICAgIGNvbnN0cnVjdG9yKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgIHN3aXRjaCAoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3gtZ3ppcCc6XG4gICAgICAgICAgICBjYXNlICdnemlwJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlR3ppcCkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd4LWRlZmxhdGUnOlxuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZSc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZURlZmxhdGUpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZS1yYXcnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVEZWZsYXRlUmF3KSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2JyJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlQnJvdGxpQ29tcHJlc3MpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGNvbXByZXNzaW9uIGZvcm1hdDogJHtjb21wcmVzc2lvbkZvcm1hdH1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbSA9IFBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLGlHQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9EZWNvbXByZXNzaW9uU3RyZWFtLmpzPzNhNDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IG5vZGVfemxpYl8xID0gcmVxdWlyZShcIm5vZGU6emxpYlwiKTtcbmNvbnN0IFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHN0YXRpYyBzdXBwb3J0ZWRGb3JtYXRzID0gZ2xvYmFsVGhpcy5wcm9jZXNzPy52ZXJzaW9uPy5zdGFydHNXaXRoKCd2MicpXG4gICAgICAgID8gWydnemlwJywgJ2RlZmxhdGUnLCAnYnInXVxuICAgICAgICA6IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2RlZmxhdGUtcmF3JywgJ2JyJ107XG4gICAgY29uc3RydWN0b3IoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgc3dpdGNoIChjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICAgICAgY2FzZSAneC1nemlwJzpcbiAgICAgICAgICAgIGNhc2UgJ2d6aXAnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVHdW56aXApKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlJzpcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVJbmZsYXRlKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUtcmF3JzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlSW5mbGF0ZVJhdykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicic6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUJyb3RsaURlY29tcHJlc3MpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBVbnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3JtYXQ6ICcke2NvbXByZXNzaW9uRm9ybWF0fSdgKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtID0gUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanM/ZGFlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxGaWxlID0gdm9pZCAwO1xuY29uc3QgQmxvYl9qc18xID0gcmVxdWlyZShcIi4vQmxvYi5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsRmlsZSBleHRlbmRzIEJsb2JfanNfMS5Qb255ZmlsbEJsb2Ige1xuICAgIG5hbWU7XG4gICAgbGFzdE1vZGlmaWVkO1xuICAgIGNvbnN0cnVjdG9yKGZpbGVCaXRzLCBuYW1lLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGZpbGVCaXRzLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5sYXN0TW9kaWZpZWQgPSBvcHRpb25zPy5sYXN0TW9kaWZpZWQgfHwgRGF0ZS5ub3coKTtcbiAgICB9XG4gICAgd2Via2l0UmVsYXRpdmVQYXRoID0gJyc7XG59XG5leHBvcnRzLlBvbnlmaWxsRmlsZSA9IFBvbnlmaWxsRmlsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!**************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    *[Symbol.iterator]() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return this[Symbol.iterator]();\n    }\n    keys() {\n        return this.map.keys();\n    }\n    *values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0Zvcm1EYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qiw2QkFBNkI7QUFDN0IsNEJBQTRCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0RBQW9ELFNBQVM7QUFDN0Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFFBQVEsSUFBSTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFlBQVksV0FBVztBQUNqRTtBQUNBLG9GQUFvRixRQUFRLElBQUksR0FBRyxhQUFhO0FBQ2hILG9FQUFvRSx5Q0FBeUM7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcGxlLXRvZG9zLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRm9ybURhdGEuanM/MDIyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxGb3JtRGF0YSA9IHZvaWQgMDtcbmV4cG9ydHMuZ2V0U3RyZWFtRnJvbUZvcm1EYXRhID0gZ2V0U3RyZWFtRnJvbUZvcm1EYXRhO1xuY29uc3QgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxGb3JtRGF0YSB7XG4gICAgbWFwID0gbmV3IE1hcCgpO1xuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpIHtcbiAgICAgICAgbGV0IHZhbHVlcyA9IHRoaXMubWFwLmdldChuYW1lKTtcbiAgICAgICAgaWYgKCF2YWx1ZXMpIHtcbiAgICAgICAgICAgIHZhbHVlcyA9IFtdO1xuICAgICAgICAgICAgdGhpcy5tYXAuc2V0KG5hbWUsIHZhbHVlcyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW50cnkgPSBpc0Jsb2IodmFsdWUpXG4gICAgICAgICAgICA/IGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgIHZhbHVlcy5wdXNoKGVudHJ5KTtcbiAgICB9XG4gICAgZGVsZXRlKG5hbWUpIHtcbiAgICAgICAgdGhpcy5tYXAuZGVsZXRlKG5hbWUpO1xuICAgIH1cbiAgICBnZXQobmFtZSkge1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSB0aGlzLm1hcC5nZXQobmFtZSk7XG4gICAgICAgIHJldHVybiB2YWx1ZXMgPyB2YWx1ZXNbMF0gOiBudWxsO1xuICAgIH1cbiAgICBnZXRBbGwobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KG5hbWUpIHx8IFtdO1xuICAgIH1cbiAgICBoYXMobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuaGFzKG5hbWUpO1xuICAgIH1cbiAgICBzZXQobmFtZSwgdmFsdWUsIGZpbGVOYW1lKSB7XG4gICAgICAgIGNvbnN0IGVudHJ5ID0gaXNCbG9iKHZhbHVlKVxuICAgICAgICAgICAgPyBnZXROb3JtYWxpemVkRmlsZShuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpXG4gICAgICAgICAgICA6IHZhbHVlO1xuICAgICAgICB0aGlzLm1hcC5zZXQobmFtZSwgW2VudHJ5XSk7XG4gICAgfVxuICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZXNdIG9mIHRoaXMubWFwKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIHZhbHVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbnRyaWVzKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgfVxuICAgIGtleXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5rZXlzKCk7XG4gICAgfVxuICAgICp2YWx1ZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWVzIG9mIHRoaXMubWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsRm9ybURhdGEgPSBQb255ZmlsbEZvcm1EYXRhO1xuZnVuY3Rpb24gZ2V0U3RyZWFtRnJvbUZvcm1EYXRhKGZvcm1EYXRhLCBib3VuZGFyeSA9ICctLS0nKSB7XG4gICAgY29uc3QgZW50cmllcyA9IFtdO1xuICAgIGxldCBzZW50SW5pdGlhbEhlYWRlciA9IGZhbHNlO1xuICAgIHJldHVybiBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHtcbiAgICAgICAgc3RhcnQ6IGNvbnRyb2xsZXIgPT4ge1xuICAgICAgICAgICAgZm9ybURhdGEuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghc2VudEluaXRpYWxIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGAtLSR7Ym91bmRhcnl9XFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBzZW50SW5pdGlhbEhlYWRlciA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVudHJpZXMucHVzaChba2V5LCB2YWx1ZV0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoIXNlbnRJbml0aWFsSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGAtLSR7Ym91bmRhcnl9LS1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwdWxsOiBhc3luYyAoY29udHJvbGxlcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgZW50cnkgPSBlbnRyaWVzLnNoaWZ0KCk7XG4gICAgICAgICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBlbnRyeTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYENvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT1cIiR7a2V5fVwiXFxyXFxuXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20odmFsdWUpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBmaWxlbmFtZVBhcnQgPSAnJztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlLm5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lUGFydCA9IGA7IGZpbGVuYW1lPVwiJHt2YWx1ZS5uYW1lfVwiYDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYENvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT1cIiR7a2V5fVwiJHtmaWxlbmFtZVBhcnR9XFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYENvbnRlbnQtVHlwZTogJHt2YWx1ZS50eXBlIHx8ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nfVxcclxcblxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW50cnlTdHJlYW0gPSB2YWx1ZS5zdHJlYW0oKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBlbnRyeVN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGNodW5rKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZW50cmllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBcXHJcXG4tLSR7Ym91bmRhcnl9LS1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgXFxyXFxuLS0ke2JvdW5kYXJ5fVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYFxcclxcbi0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXROb3JtYWxpemVkRmlsZShuYW1lLCBibG9iLCBmaWxlTmFtZSkge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShibG9iLCAnbmFtZScsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogZmlsZU5hbWUgfHwgYmxvYi5uYW1lIHx8IG5hbWUsXG4gICAgfSk7XG4gICAgcmV0dXJuIGJsb2I7XG59XG5mdW5jdGlvbiBpc0Jsb2IodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LmFycmF5QnVmZmVyICE9IG51bGw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    *values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    *entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXF1ZXN0LmpzP2VjZjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsUmVxdWVzdCA9IHZvaWQgMDtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCJodHRwXCIpO1xuY29uc3QgaHR0cHNfMSA9IHJlcXVpcmUoXCJodHRwc1wiKTtcbmNvbnN0IEJvZHlfanNfMSA9IHJlcXVpcmUoXCIuL0JvZHkuanNcIik7XG5jb25zdCBIZWFkZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJzLmpzXCIpO1xuZnVuY3Rpb24gaXNSZXF1ZXN0KGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0W1N5bWJvbC50b1N0cmluZ1RhZ10gPT09ICdSZXF1ZXN0Jztcbn1cbmZ1bmN0aW9uIGlzVVJMKG9iaikge1xuICAgIHJldHVybiBvYmo/LmhyZWYgIT0gbnVsbDtcbn1cbmNsYXNzIFBvbnlmaWxsUmVxdWVzdCBleHRlbmRzIEJvZHlfanNfMS5Qb255ZmlsbEJvZHkge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0LCBvcHRpb25zKSB7XG4gICAgICAgIGxldCB1cmw7XG4gICAgICAgIGxldCBib2R5SW5pdCA9IG51bGw7XG4gICAgICAgIGxldCByZXF1ZXN0SW5pdDtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzVVJMKGlucHV0KSkge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1JlcXVlc3QoaW5wdXQpKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dC51cmw7XG4gICAgICAgICAgICBib2R5SW5pdCA9IGlucHV0LmJvZHk7XG4gICAgICAgICAgICByZXF1ZXN0SW5pdCA9IGlucHV0O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zICE9IG51bGwpIHtcbiAgICAgICAgICAgIGJvZHlJbml0ID0gb3B0aW9ucy5ib2R5IHx8IG51bGw7XG4gICAgICAgICAgICByZXF1ZXN0SW5pdCA9IG9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoYm9keUluaXQsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmNhY2hlID0gcmVxdWVzdEluaXQ/LmNhY2hlIHx8ICdkZWZhdWx0JztcbiAgICAgICAgdGhpcy5jcmVkZW50aWFscyA9IHJlcXVlc3RJbml0Py5jcmVkZW50aWFscyB8fCAnc2FtZS1vcmlnaW4nO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPVxuICAgICAgICAgICAgcmVxdWVzdEluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShyZXF1ZXN0SW5pdC5oZWFkZXJzKVxuICAgICAgICAgICAgICAgID8gcmVxdWVzdEluaXQuaGVhZGVyc1xuICAgICAgICAgICAgICAgIDogbmV3IEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnMocmVxdWVzdEluaXQ/LmhlYWRlcnMpO1xuICAgICAgICB0aGlzLmludGVncml0eSA9IHJlcXVlc3RJbml0Py5pbnRlZ3JpdHkgfHwgJyc7XG4gICAgICAgIHRoaXMua2VlcGFsaXZlID0gcmVxdWVzdEluaXQ/LmtlZXBhbGl2ZSAhPSBudWxsID8gcmVxdWVzdEluaXQ/LmtlZXBhbGl2ZSA6IGZhbHNlO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IHJlcXVlc3RJbml0Py5tZXRob2Q/LnRvVXBwZXJDYXNlKCkgfHwgJ0dFVCc7XG4gICAgICAgIHRoaXMubW9kZSA9IHJlcXVlc3RJbml0Py5tb2RlIHx8ICdjb3JzJztcbiAgICAgICAgdGhpcy5yZWRpcmVjdCA9IHJlcXVlc3RJbml0Py5yZWRpcmVjdCB8fCAnZm9sbG93JztcbiAgICAgICAgdGhpcy5yZWZlcnJlciA9IHJlcXVlc3RJbml0Py5yZWZlcnJlciB8fCAnYWJvdXQ6Y2xpZW50JztcbiAgICAgICAgdGhpcy5yZWZlcnJlclBvbGljeSA9IHJlcXVlc3RJbml0Py5yZWZlcnJlclBvbGljeSB8fCAnbm8tcmVmZXJyZXInO1xuICAgICAgICB0aGlzLl9zaWduYWwgPSByZXF1ZXN0SW5pdD8uc2lnbmFsO1xuICAgICAgICB0aGlzLmhlYWRlcnNTZXJpYWxpemVyID0gcmVxdWVzdEluaXQ/LmhlYWRlcnNTZXJpYWxpemVyO1xuICAgICAgICB0aGlzLmR1cGxleCA9IHJlcXVlc3RJbml0Py5kdXBsZXggfHwgJ2hhbGYnO1xuICAgICAgICB0aGlzLnVybCA9IHVybCB8fCAnJztcbiAgICAgICAgdGhpcy5kZXN0aW5hdGlvbiA9ICdkb2N1bWVudCc7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSAnYXV0byc7XG4gICAgICAgIGlmICh0aGlzLm1ldGhvZCAhPT0gJ0dFVCcgJiYgdGhpcy5tZXRob2QgIT09ICdIRUFEJykge1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVDb250ZW50TGVuZ3RoSGVhZGVyKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXF1ZXN0SW5pdD8uYWdlbnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHJlcXVlc3RJbml0LmFnZW50ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMudXJsLnN0YXJ0c1dpdGgoJ2h0dHA6LycpICYmIHJlcXVlc3RJbml0LmFnZW50IGluc3RhbmNlb2YgaHR0cF8xLkFnZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IHJlcXVlc3RJbml0LmFnZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy51cmwuc3RhcnRzV2l0aCgnaHR0cHM6LycpICYmIHJlcXVlc3RJbml0LmFnZW50IGluc3RhbmNlb2YgaHR0cHNfMS5BZ2VudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSByZXF1ZXN0SW5pdC5hZ2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBoZWFkZXJzU2VyaWFsaXplcjtcbiAgICBjYWNoZTtcbiAgICBjcmVkZW50aWFscztcbiAgICBkZXN0aW5hdGlvbjtcbiAgICBoZWFkZXJzO1xuICAgIGludGVncml0eTtcbiAgICBrZWVwYWxpdmU7XG4gICAgbWV0aG9kO1xuICAgIG1vZGU7XG4gICAgcHJpb3JpdHk7XG4gICAgcmVkaXJlY3Q7XG4gICAgcmVmZXJyZXI7XG4gICAgcmVmZXJyZXJQb2xpY3k7XG4gICAgdXJsO1xuICAgIGR1cGxleDtcbiAgICBhZ2VudDtcbiAgICBfc2lnbmFsO1xuICAgIGdldCBzaWduYWwoKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBzaWduYWwgb25seSBpZiBuZWVkZWRcbiAgICAgICAgLy8gQmVjYXVzZSB0aGUgY3JlYXRpb24gb2Ygc2lnbmFsIGlzIGV4cGVuc2l2ZVxuICAgICAgICBpZiAoIXRoaXMuX3NpZ25hbCkge1xuICAgICAgICAgICAgdGhpcy5fc2lnbmFsID0gbmV3IEFib3J0Q29udHJvbGxlcigpLnNpZ25hbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fc2lnbmFsO1xuICAgIH1cbiAgICBjbG9uZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIFtTeW1ib2wudG9TdHJpbmdUYWddID0gJ1JlcXVlc3QnO1xufVxuZXhwb3J0cy5Qb255ZmlsbFJlcXVlc3QgPSBQb255ZmlsbFJlcXVlc3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!**************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsMkVBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWM7QUFDM0MsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzPzBlMDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsUmVzcG9uc2UgPSB2b2lkIDA7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiaHR0cFwiKTtcbmNvbnN0IEJvZHlfanNfMSA9IHJlcXVpcmUoXCIuL0JvZHkuanNcIik7XG5jb25zdCBIZWFkZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJzLmpzXCIpO1xuY29uc3QgSlNPTl9DT05URU5UX1RZUEUgPSAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCc7XG5jbGFzcyBQb255ZmlsbFJlc3BvbnNlIGV4dGVuZHMgQm9keV9qc18xLlBvbnlmaWxsQm9keSB7XG4gICAgaGVhZGVycztcbiAgICBjb25zdHJ1Y3Rvcihib2R5LCBpbml0KSB7XG4gICAgICAgIHN1cGVyKGJvZHkgfHwgbnVsbCwgaW5pdCk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9XG4gICAgICAgICAgICBpbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkoaW5pdC5oZWFkZXJzKVxuICAgICAgICAgICAgICAgID8gaW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhpbml0Py5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBpbml0Py5zdGF0dXMgfHwgMjAwO1xuICAgICAgICB0aGlzLnN0YXR1c1RleHQgPSBpbml0Py5zdGF0dXNUZXh0IHx8IGh0dHBfMS5TVEFUVVNfQ09ERVNbdGhpcy5zdGF0dXNdIHx8ICdPSyc7XG4gICAgICAgIHRoaXMudXJsID0gaW5pdD8udXJsIHx8ICcnO1xuICAgICAgICB0aGlzLnJlZGlyZWN0ZWQgPSBpbml0Py5yZWRpcmVjdGVkIHx8IGZhbHNlO1xuICAgICAgICB0aGlzLnR5cGUgPSBpbml0Py50eXBlIHx8ICdkZWZhdWx0JztcbiAgICAgICAgdGhpcy5oYW5kbGVDb250ZW50TGVuZ3RoSGVhZGVyKCk7XG4gICAgfVxuICAgIGdldCBvaygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdHVzID49IDIwMCAmJiB0aGlzLnN0YXR1cyA8IDMwMDtcbiAgICB9XG4gICAgc3RhdHVzO1xuICAgIHN0YXR1c1RleHQ7XG4gICAgdXJsO1xuICAgIHJlZGlyZWN0ZWQ7XG4gICAgdHlwZTtcbiAgICBjbG9uZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHN0YXRpYyBlcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQb255ZmlsbFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICAgICAgc3RhdHVzVGV4dDogJ0ludGVybmFsIFNlcnZlciBFcnJvcicsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgcmVkaXJlY3QodXJsLCBzdGF0dXMgPSAzMDIpIHtcbiAgICAgICAgaWYgKHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPiAzOTkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdJbnZhbGlkIHN0YXR1cyBjb2RlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb255ZmlsbFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjogdXJsLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBqc29uKGRhdGEsIGluaXQgPSB7fSkge1xuICAgICAgICBpbml0LmhlYWRlcnMgPVxuICAgICAgICAgICAgaW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKGluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IGluaXQuaGVhZGVyc1xuICAgICAgICAgICAgICAgIDogbmV3IEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnMoaW5pdD8uaGVhZGVycyk7XG4gICAgICAgIGlmICghaW5pdC5oZWFkZXJzLmhhcygnY29udGVudC10eXBlJykpIHtcbiAgICAgICAgICAgIGluaXQuaGVhZGVycy5zZXQoJ2NvbnRlbnQtdHlwZScsIEpTT05fQ09OVEVOVF9UWVBFKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSksIGluaXQpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxSZXNwb25zZSA9IFBvbnlmaWxsUmVzcG9uc2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UZXh0RW5jb2RlckRlY29kZXIuanM/MGZjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxUZXh0RGVjb2RlciA9IGV4cG9ydHMuUG9ueWZpbGxUZXh0RW5jb2RlciA9IHZvaWQgMDtcbmV4cG9ydHMuUG9ueWZpbGxCdG9hID0gUG9ueWZpbGxCdG9hO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxUZXh0RW5jb2RlciB7XG4gICAgZW5jb2Rpbmc7XG4gICAgY29uc3RydWN0b3IoZW5jb2RpbmcgPSAndXRmLTgnKSB7XG4gICAgICAgIHRoaXMuZW5jb2RpbmcgPSBlbmNvZGluZztcbiAgICB9XG4gICAgZW5jb2RlKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgdGhpcy5lbmNvZGluZyk7XG4gICAgfVxuICAgIGVuY29kZUludG8oc291cmNlLCBkZXN0aW5hdGlvbikge1xuICAgICAgICBjb25zdCBidWZmZXIgPSB0aGlzLmVuY29kZShzb3VyY2UpO1xuICAgICAgICBjb25zdCBjb3BpZWQgPSBidWZmZXIuY29weShkZXN0aW5hdGlvbik7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZWFkOiBjb3BpZWQsXG4gICAgICAgICAgICB3cml0dGVuOiBjb3BpZWQsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyID0gUG9ueWZpbGxUZXh0RW5jb2RlcjtcbmNsYXNzIFBvbnlmaWxsVGV4dERlY29kZXIge1xuICAgIGVuY29kaW5nO1xuICAgIGZhdGFsID0gZmFsc2U7XG4gICAgaWdub3JlQk9NID0gZmFsc2U7XG4gICAgY29uc3RydWN0b3IoZW5jb2RpbmcgPSAndXRmLTgnLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZW5jb2RpbmcgPSBlbmNvZGluZztcbiAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuZmF0YWwgPSBvcHRpb25zLmZhdGFsIHx8IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5pZ25vcmVCT00gPSBvcHRpb25zLmlnbm9yZUJPTSB8fCBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWNvZGUoaW5wdXQpIHtcbiAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihpbnB1dCkpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dC50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNBcnJheUJ1ZmZlclZpZXcpKGlucHV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LmJ1ZmZlciwgaW5wdXQuYnl0ZU9mZnNldCwgaW5wdXQuYnl0ZUxlbmd0aCkudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0KS50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVGV4dERlY29kZXIgPSBQb255ZmlsbFRleHREZWNvZGVyO1xuZnVuY3Rpb24gUG9ueWZpbGxCdG9hKGlucHV0KSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCAnYmluYXJ5JykudG9TdHJpbmcoJ2Jhc2U2NCcpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcz82MjA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IG5vZGVfc3RyZWFtXzEgPSByZXF1aXJlKFwibm9kZTpzdHJlYW1cIik7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jb25zdCBXcml0YWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vV3JpdGFibGVTdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgdHJhbnNmb3JtO1xuICAgIHdyaXRhYmxlO1xuICAgIHJlYWRhYmxlO1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zZm9ybWVyKSB7XG4gICAgICAgIGlmICh0cmFuc2Zvcm1lciBpbnN0YW5jZW9mIG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybWVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRyYW5zZm9ybWVyKSB7XG4gICAgICAgICAgICBjb25zdCBjb250cm9sbGVyID0ge1xuICAgICAgICAgICAgICAgIGVucXVldWUoY2h1bmspIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLnB1c2goY2h1bmspO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3IocmVhc29uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS5kZXN0cm95KHJlYXNvbik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0ZXJtaW5hdGUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS5lbmQoKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCBkZXNpcmVkU2l6ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZm9ybS53cml0YWJsZUxlbmd0aDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IG5ldyBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSh7XG4gICAgICAgICAgICAgICAgcmVhZCgpIHsgfSxcbiAgICAgICAgICAgICAgICB3cml0ZShjaHVuaywgX2VuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdHJhbnNmb3JtZXIudHJhbnNmb3JtPy4oY2h1bmssIGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmluYWwoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRyYW5zZm9ybWVyLmZsdXNoPy4oY29udHJvbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IG5ldyBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMud3JpdGFibGUgPSBuZXcgV3JpdGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtKHRoaXMudHJhbnNmb3JtKTtcbiAgICAgICAgdGhpcy5yZWFkYWJsZSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0odGhpcy50cmFuc2Zvcm0pO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0gPSBQb255ZmlsbFRyYW5zZm9ybVN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!*********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(rsc)/./node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(rsc)/./node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsbURBQW1ELG1CQUFPLENBQUMsNEVBQWtCO0FBQzdFLGtEQUFrRCxtQkFBTyxDQUFDLDBHQUErQjtBQUN6Riw2QkFBNkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsSUFBSSxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixNQUFNLEdBQUcsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGNBQWMsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcz9jMWQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBmYXN0X3F1ZXJ5c3RyaW5nXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1xdWVyeXN0cmluZ1wiKSk7XG5jb25zdCBmYXN0X3VybF9wYXJzZXJfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJAa2FtaWxraXNpZWxhL2Zhc3QtdXJsLXBhcnNlclwiKSk7XG5jb25zdCBVUkxTZWFyY2hQYXJhbXNfanNfMSA9IHJlcXVpcmUoXCIuL1VSTFNlYXJjaFBhcmFtcy5qc1wiKTtcbmZhc3RfdXJsX3BhcnNlcl8xLmRlZmF1bHQucXVlcnlTdHJpbmcgPSBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdDtcbmNsYXNzIFBvbnlmaWxsVVJMIGV4dGVuZHMgZmFzdF91cmxfcGFyc2VyXzEuZGVmYXVsdCB7XG4gICAgY29uc3RydWN0b3IodXJsLCBiYXNlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnZGF0YTonKSkge1xuICAgICAgICAgICAgdGhpcy5wcm90b2NvbCA9ICdkYXRhOic7XG4gICAgICAgICAgICB0aGlzLnBhdGhuYW1lID0gdXJsLnNsaWNlKCdkYXRhOicubGVuZ3RoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcnNlKHVybCwgZmFsc2UpO1xuICAgICAgICBpZiAoYmFzZSkge1xuICAgICAgICAgICAgY29uc3QgYmFzZVBhcnNlZCA9IHR5cGVvZiBiYXNlID09PSAnc3RyaW5nJyA/IG5ldyBQb255ZmlsbFVSTChiYXNlKSA6IGJhc2U7XG4gICAgICAgICAgICB0aGlzLnByb3RvY29sID0gdGhpcy5wcm90b2NvbCB8fCBiYXNlUGFyc2VkLnByb3RvY29sO1xuICAgICAgICAgICAgdGhpcy5ob3N0ID0gdGhpcy5ob3N0IHx8IGJhc2VQYXJzZWQuaG9zdDtcbiAgICAgICAgICAgIHRoaXMucGF0aG5hbWUgPSB0aGlzLnBhdGhuYW1lIHx8IGJhc2VQYXJzZWQucGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IG9yaWdpbigpIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMucHJvdG9jb2x9Ly8ke3RoaXMuaG9zdH1gO1xuICAgIH1cbiAgICBfc2VhcmNoUGFyYW1zO1xuICAgIGdldCBzZWFyY2hQYXJhbXMoKSB7XG4gICAgICAgIGlmICghdGhpcy5fc2VhcmNoUGFyYW1zKSB7XG4gICAgICAgICAgICB0aGlzLl9zZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zX2pzXzEuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXModGhpcy5xdWVyeSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3NlYXJjaFBhcmFtcztcbiAgICB9XG4gICAgZ2V0IHVzZXJuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdXRoPy5zcGxpdCgnOicpWzBdIHx8ICcnO1xuICAgIH1cbiAgICBzZXQgdXNlcm5hbWUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5hdXRoID0gYCR7dmFsdWV9OiR7dGhpcy5wYXNzd29yZH1gO1xuICAgIH1cbiAgICBnZXQgcGFzc3dvcmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF1dGg/LnNwbGl0KCc6JylbMV0gfHwgJyc7XG4gICAgfVxuICAgIHNldCBwYXNzd29yZCh2YWx1ZSkge1xuICAgICAgICB0aGlzLmF1dGggPSBgJHt0aGlzLnVzZXJuYW1lfToke3ZhbHVlfWA7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXQoKTtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpO1xuICAgIH1cbiAgICBzdGF0aWMgYmxvYlJlZ2lzdHJ5ID0gbmV3IE1hcCgpO1xuICAgIHN0YXRpYyBjcmVhdGVPYmplY3RVUkwoYmxvYikge1xuICAgICAgICBjb25zdCBibG9iVXJsID0gYGJsb2I6d2hhdHdnbm9kZTokeygwLCBjcnlwdG9fMS5yYW5kb21VVUlEKSgpfWA7XG4gICAgICAgIHRoaXMuYmxvYlJlZ2lzdHJ5LnNldChibG9iVXJsLCBibG9iKTtcbiAgICAgICAgcmV0dXJuIGJsb2JVcmw7XG4gICAgfVxuICAgIHN0YXRpYyByZXNvbHZlT2JqZWN0VVJMKHVybCkge1xuICAgICAgICBpZiAoIXRoaXMuYmxvYlJlZ2lzdHJ5Lmhhcyh1cmwpKSB7XG4gICAgICAgICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmJsb2JSZWdpc3RyeS5kZWxldGUodXJsKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZ2V0QmxvYkZyb21VUkwodXJsKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5ibG9iUmVnaXN0cnkuZ2V0KHVybCkgfHwgKDAsIGJ1ZmZlcl8xLnJlc29sdmVPYmplY3RVUkwpKHVybCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxVUkwgPSBQb255ZmlsbFVSTDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(rsc)/./node_modules/fast-querystring/lib/index.js\"));\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    *entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    *values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsbURBQW1ELG1CQUFPLENBQUMsNEVBQWtCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYyxHQUFHLE1BQU07QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9VUkxTZWFyY2hQYXJhbXMuanM/NDg4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgZmFzdF9xdWVyeXN0cmluZ18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImZhc3QtcXVlcnlzdHJpbmdcIikpO1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LmVudHJpZXMgIT0gbnVsbDtcbn1cbmNsYXNzIFBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zIHtcbiAgICBwYXJhbXM7XG4gICAgY29uc3RydWN0b3IoaW5pdCkge1xuICAgICAgICBpZiAoaW5pdCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBpbml0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zID0gZmFzdF9xdWVyeXN0cmluZ18xLmRlZmF1bHQucGFyc2UoaW5pdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KGluaXQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc1VSTFNlYXJjaFBhcmFtcyhpbml0KSkge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zID0ge307XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaW5pdC5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zID0gaW5pdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGFyYW1zID0ge307XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXBwZW5kKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nVmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgY29uc3QgZmluYWxWYWx1ZSA9IGV4aXN0aW5nVmFsdWUgPyBgJHtleGlzdGluZ1ZhbHVlfSwke3ZhbHVlfWAgOiB2YWx1ZTtcbiAgICAgICAgdGhpcy5wYXJhbXNbbmFtZV0gPSBmaW5hbFZhbHVlO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICBkZWxldGUgdGhpcy5wYXJhbXNbbmFtZV07XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5wYXJhbXNbbmFtZV07XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlWzBdIHx8IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG4gICAgfVxuICAgIGdldEFsbChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5wYXJhbXNbbmFtZV07XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA/IFt2YWx1ZV0gOiBbXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiBuYW1lIGluIHRoaXMucGFyYW1zO1xuICAgIH1cbiAgICBzZXQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5wYXJhbXNbbmFtZV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgc29ydCgpIHtcbiAgICAgICAgY29uc3Qgc29ydGVkS2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucGFyYW1zKS5zb3J0KCk7XG4gICAgICAgIGNvbnN0IHNvcnRlZFBhcmFtcyA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBzb3J0ZWRLZXlzKSB7XG4gICAgICAgICAgICBzb3J0ZWRQYXJhbXNba2V5XSA9IHRoaXMucGFyYW1zW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJhbXMgPSBzb3J0ZWRQYXJhbXM7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gZmFzdF9xdWVyeXN0cmluZ18xLmRlZmF1bHQuc3RyaW5naWZ5KHRoaXMucGFyYW1zKTtcbiAgICB9XG4gICAgKmtleXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMucGFyYW1zKSB7XG4gICAgICAgICAgICB5aWVsZCBrZXk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmVudHJpZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMua2V5cygpKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucGFyYW1zW2tleV07XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgW2tleSwgaXRlbV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgeWllbGQgW2tleSwgdmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICp2YWx1ZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3QgWywgdmFsdWVdIG9mIHRoaXMpIHtcbiAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyaWVzKCk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IHNpemUoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnBhcmFtcykubGVuZ3RoO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMgPSBQb255ZmlsbFVSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1dyaXRhYmxlU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QixpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1dyaXRhYmxlU3RyZWFtLmpzPzNlN2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsV3JpdGFibGVTdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCJzdHJlYW1cIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jbGFzcyBQb255ZmlsbFdyaXRhYmxlU3RyZWFtIHtcbiAgICB3cml0YWJsZTtcbiAgICBjb25zdHJ1Y3Rvcih1bmRlcmx5aW5nU2luaykge1xuICAgICAgICBpZiAodW5kZXJseWluZ1NpbmsgaW5zdGFuY2VvZiBzdHJlYW1fMS5Xcml0YWJsZSkge1xuICAgICAgICAgICAgdGhpcy53cml0YWJsZSA9IHVuZGVybHlpbmdTaW5rO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVuZGVybHlpbmdTaW5rKSB7XG4gICAgICAgICAgICBjb25zdCB3cml0YWJsZSA9IG5ldyBzdHJlYW1fMS5Xcml0YWJsZSh7XG4gICAgICAgICAgICAgICAgd3JpdGUoY2h1bmssIF9lbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHVuZGVybHlpbmdTaW5rLndyaXRlPy4oY2h1bmssIGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmluYWwoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdW5kZXJseWluZ1NpbmsuY2xvc2U/LigpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLndyaXRhYmxlID0gd3JpdGFibGU7XG4gICAgICAgICAgICBsZXQgb25hYm9ydDtcbiAgICAgICAgICAgIGxldCByZWFzb247XG4gICAgICAgICAgICBjb25zdCBjb250cm9sbGVyID0ge1xuICAgICAgICAgICAgICAgIHNpZ25hbDoge1xuICAgICAgICAgICAgICAgICAgICBhbnkoc2lnbmFscykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEFib3J0U2lnbmFsLmFueShbLi4uc2lnbmFsc10pO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBnZXQgcmVhc29uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYXNvbjtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZ2V0IGFib3J0ZWQoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gd3JpdGFibGUuZGVzdHJveWVkO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBhZGRFdmVudExpc3RlbmVyOiAoX2V2ZW50LCBldmVudExpc3RlbmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3cml0YWJsZS5vbmNlKCdlcnJvcicsIGV2ZW50TGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGFibGUub25jZSgnY2xvc2UnLCBldmVudExpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcjogKF9ldmVudCwgZXZlbnRMaXN0ZW5lcikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGFibGUub2ZmKCdlcnJvcicsIGV2ZW50TGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGFibGUub2ZmKCdjbG9zZScsIGV2ZW50TGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaEV2ZW50OiAoX2V2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGdldCBvbmFib3J0KCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9uYWJvcnQ7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHNldCBvbmFib3J0KHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25hYm9ydCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbmFib3J0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uYWJvcnQgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbmFib3J0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uYWJvcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0aHJvd0lmQWJvcnRlZCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh3cml0YWJsZS5kZXN0cm95ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyByZWFzb247XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMud3JpdGFibGUuZGVzdHJveShlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMud3JpdGFibGUub25jZSgnZXJyb3InLCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgIHJlYXNvbiA9IGVycjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy53cml0YWJsZSA9IG5ldyBzdHJlYW1fMS5Xcml0YWJsZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFdyaXRlcigpIHtcbiAgICAgICAgY29uc3Qgd3JpdGFibGUgPSB0aGlzLndyaXRhYmxlO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY2xvc2VkOiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgICB3cml0YWJsZS5vbmNlKCdjbG9zZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBnZXQgZGVzaXJlZFNpemUoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHdyaXRhYmxlLndyaXRhYmxlTGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlYWR5OiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgICB3cml0YWJsZS5vbmNlKCdkcmFpbicsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICByZWxlYXNlTG9jaygpIHtcbiAgICAgICAgICAgICAgICAvLyBuby1vcFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHdyaXRlKGNodW5rKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNodW5rID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB3cml0YWJsZS53cml0ZShjaHVuaywgKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjbG9zZSgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXdyaXRhYmxlLmVycm9yZWQgJiYgd3JpdGFibGUuY2xvc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHdyaXRhYmxlLmVycm9yZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdCh3cml0YWJsZS5lcnJvcmVkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdyaXRhYmxlLmVuZCgoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFib3J0KHJlYXNvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgd3JpdGFibGUuZGVzdHJveShyZWFzb24pO1xuICAgICAgICAgICAgICAgICAgICB3cml0YWJsZS5vbmNlKCdjbG9zZScsIHJlc29sdmUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY2xvc2UoKSB7XG4gICAgICAgIGlmICghdGhpcy53cml0YWJsZS5lcnJvcmVkICYmIHRoaXMud3JpdGFibGUuY2xvc2VkKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLndyaXRhYmxlLmVycm9yZWQpIHtcbiAgICAgICAgICAgICAgICByZWplY3QodGhpcy53cml0YWJsZS5lcnJvcmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMud3JpdGFibGUuZW5kKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFib3J0KHJlYXNvbikge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICB0aGlzLndyaXRhYmxlLmRlc3Ryb3kocmVhc29uKTtcbiAgICAgICAgICAgIHRoaXMud3JpdGFibGUub25jZSgnY2xvc2UnLCByZXNvbHZlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGxvY2tlZCA9IGZhbHNlO1xufVxuZXhwb3J0cy5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtID0gUG9ueWZpbGxXcml0YWJsZVN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsY0FBSTtBQUN6QixjQUFjLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMscUZBQWdCO0FBQy9DLDJCQUEyQixtQkFBTyxDQUFDLDZGQUFvQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyxtRkFBZTtBQUM3QyxpQkFBaUIsbUJBQU8sQ0FBQyx5RUFBVTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2Qyx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzP2Y0MTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZldGNoUG9ueWZpbGwgPSBmZXRjaFBvbnlmaWxsO1xuY29uc3QgZnNfMSA9IHJlcXVpcmUoXCJmc1wiKTtcbmNvbnN0IHVybF8xID0gcmVxdWlyZShcInVybFwiKTtcbmNvbnN0IGZldGNoQ3VybF9qc18xID0gcmVxdWlyZShcIi4vZmV0Y2hDdXJsLmpzXCIpO1xuY29uc3QgZmV0Y2hOb2RlSHR0cF9qc18xID0gcmVxdWlyZShcIi4vZmV0Y2hOb2RlSHR0cC5qc1wiKTtcbmNvbnN0IFJlcXVlc3RfanNfMSA9IHJlcXVpcmUoXCIuL1JlcXVlc3QuanNcIik7XG5jb25zdCBSZXNwb25zZV9qc18xID0gcmVxdWlyZShcIi4vUmVzcG9uc2UuanNcIik7XG5jb25zdCBVUkxfanNfMSA9IHJlcXVpcmUoXCIuL1VSTC5qc1wiKTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNvbnN0IEJBU0U2NF9TVUZGSVggPSAnO2Jhc2U2NCc7XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckZpbGUodXJsKSB7XG4gICAgY29uc3QgcGF0aCA9ICgwLCB1cmxfMS5maWxlVVJMVG9QYXRoKSh1cmwpO1xuICAgIGNvbnN0IHJlYWRhYmxlID0gKDAsIGZzXzEuY3JlYXRlUmVhZFN0cmVhbSkocGF0aCk7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UocmVhZGFibGUpO1xufVxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JEYXRhVXJpKHVybCkge1xuICAgIGNvbnN0IFttaW1lVHlwZSA9ICd0ZXh0L3BsYWluJywgLi4uZGF0YXNdID0gdXJsLnN1YnN0cmluZyg1KS5zcGxpdCgnLCcpO1xuICAgIGNvbnN0IGRhdGEgPSBkZWNvZGVVUklDb21wb25lbnQoZGF0YXMuam9pbignLCcpKTtcbiAgICBpZiAobWltZVR5cGUuZW5kc1dpdGgoQkFTRTY0X1NVRkZJWCkpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmZyb20oZGF0YSwgJ2Jhc2U2NHVybCcpO1xuICAgICAgICBjb25zdCByZWFsTWltZVR5cGUgPSBtaW1lVHlwZS5zbGljZSgwLCAtQkFTRTY0X1NVRkZJWC5sZW5ndGgpO1xuICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShidWZmZXIsIHtcbiAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgc3RhdHVzVGV4dDogJ09LJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnY29udGVudC10eXBlJzogcmVhbE1pbWVUeXBlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGRhdGEsIHtcbiAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBtaW1lVHlwZSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yQmxvYih1cmwpIHtcbiAgICBjb25zdCBibG9iID0gVVJMX2pzXzEuUG9ueWZpbGxVUkwuZ2V0QmxvYkZyb21VUkwodXJsKTtcbiAgICBpZiAoIWJsb2IpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBCbG9iIFVSTCcpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShibG9iLCB7XG4gICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogYmxvYi50eXBlLFxuICAgICAgICAgICAgJ2NvbnRlbnQtbGVuZ3RoJzogYmxvYi5zaXplLnRvU3RyaW5nKCksXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc1VSTChvYmopIHtcbiAgICByZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqLmhyZWYgIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGZldGNoUG9ueWZpbGwoaW5mbywgaW5pdCkge1xuICAgIGlmICh0eXBlb2YgaW5mbyA9PT0gJ3N0cmluZycgfHwgaXNVUkwoaW5mbykpIHtcbiAgICAgICAgY29uc3QgcG9ueWZpbGxSZXF1ZXN0ID0gbmV3IFJlcXVlc3RfanNfMS5Qb255ZmlsbFJlcXVlc3QoaW5mbywgaW5pdCk7XG4gICAgICAgIHJldHVybiBmZXRjaFBvbnlmaWxsKHBvbnlmaWxsUmVxdWVzdCk7XG4gICAgfVxuICAgIGNvbnN0IGZldGNoUmVxdWVzdCA9IGluZm87XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnZGF0YTonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yRGF0YVVyaShmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2ZpbGU6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckZpbGUoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdibG9iOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JCbG9iKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGdsb2JhbFRoaXMubGliY3VybCAmJiAhZmV0Y2hSZXF1ZXN0LmFnZW50KSB7XG4gICAgICAgIHJldHVybiAoMCwgZmV0Y2hDdXJsX2pzXzEuZmV0Y2hDdXJsKShmZXRjaFJlcXVlc3QpO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGZldGNoTm9kZUh0dHBfanNfMS5mZXRjaE5vZGVIdHRwKShmZXRjaFJlcXVlc3QpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQzdXLGlCQUFpQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3JDLHlDQUF3QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUNwSCxtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsZ0JBQWdCLG1CQUFPLENBQUMsMkVBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG1CQUFtQixtQkFBTyxDQUFDLGlGQUFjO0FBQ3pDLDJDQUEwQyxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUMxSCxvQkFBb0IsbUJBQU8sQ0FBQyxtRkFBZTtBQUMzQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsb0JBQW9CLG1CQUFPLENBQUMsbUZBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILGdCQUFnQixtQkFBTyxDQUFDLDJFQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCw4QkFBOEIsbUJBQU8sQ0FBQyx1R0FBeUI7QUFDL0QsK0NBQThDLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQzdJLCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSx3Q0FBdUMsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDL0gsZUFBZSxtQkFBTyxDQUFDLHlFQUFVO0FBQ2pDLHVDQUFzQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUM5RywyQkFBMkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLCtGQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksMkJBQTJCLG1CQUFPLENBQUMsaUdBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiw2QkFBNkIsbUJBQU8sQ0FBQyxxR0FBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3hKLCtCQUErQixtQkFBTyxDQUFDLHlHQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGFtcGxlLXRvZG9zLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvaW5kZXguanM/NDk2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IGV4cG9ydHMuQ29tcHJlc3Npb25TdHJlYW0gPSBleHBvcnRzLlRyYW5zZm9ybVN0cmVhbSA9IGV4cG9ydHMuV3JpdGFibGVTdHJlYW0gPSBleHBvcnRzLlVSTFNlYXJjaFBhcmFtcyA9IGV4cG9ydHMuVVJMID0gZXhwb3J0cy5idG9hID0gZXhwb3J0cy5UZXh0RGVjb2RlciA9IGV4cG9ydHMuVGV4dEVuY29kZXIgPSBleHBvcnRzLkJsb2IgPSBleHBvcnRzLkZvcm1EYXRhID0gZXhwb3J0cy5GaWxlID0gZXhwb3J0cy5SZWFkYWJsZVN0cmVhbSA9IGV4cG9ydHMuUmVzcG9uc2UgPSBleHBvcnRzLlJlcXVlc3QgPSBleHBvcnRzLkJvZHkgPSBleHBvcnRzLkhlYWRlcnMgPSBleHBvcnRzLmZldGNoID0gdm9pZCAwO1xudmFyIGZldGNoX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZldGNoXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmZXRjaF9qc18xLmZldGNoUG9ueWZpbGw7IH0gfSk7XG52YXIgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhlYWRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnM7IH0gfSk7XG52YXIgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJvZHlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJvZHlfanNfMS5Qb255ZmlsbEJvZHk7IH0gfSk7XG52YXIgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlcXVlc3RfanNfMS5Qb255ZmlsbFJlcXVlc3Q7IH0gfSk7XG52YXIgUmVzcG9uc2VfanNfMSA9IHJlcXVpcmUoXCIuL1Jlc3BvbnNlLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZTsgfSB9KTtcbnZhciBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWFkYWJsZVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtOyB9IH0pO1xudmFyIEZpbGVfanNfMSA9IHJlcXVpcmUoXCIuL0ZpbGUuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaWxlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBGaWxlX2pzXzEuUG9ueWZpbGxGaWxlOyB9IH0pO1xudmFyIEZvcm1EYXRhX2pzXzEgPSByZXF1aXJlKFwiLi9Gb3JtRGF0YS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZvcm1EYXRhXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBGb3JtRGF0YV9qc18xLlBvbnlmaWxsRm9ybURhdGE7IH0gfSk7XG52YXIgQmxvYl9qc18xID0gcmVxdWlyZShcIi4vQmxvYi5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJsb2JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJsb2JfanNfMS5Qb255ZmlsbEJsb2I7IH0gfSk7XG52YXIgVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEgPSByZXF1aXJlKFwiLi9UZXh0RW5jb2RlckRlY29kZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZXh0RW5jb2RlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEuUG9ueWZpbGxUZXh0RW5jb2RlcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRleHREZWNvZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbFRleHREZWNvZGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYnRvYVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEuUG9ueWZpbGxCdG9hOyB9IH0pO1xudmFyIFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVVJMXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBVUkxfanNfMS5Qb255ZmlsbFVSTDsgfSB9KTtcbnZhciBVUkxTZWFyY2hQYXJhbXNfanNfMSA9IHJlcXVpcmUoXCIuL1VSTFNlYXJjaFBhcmFtcy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVSTFNlYXJjaFBhcmFtc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVVJMU2VhcmNoUGFyYW1zX2pzXzEuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXM7IH0gfSk7XG52YXIgV3JpdGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1dyaXRhYmxlU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiV3JpdGFibGVTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFdyaXRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxXcml0YWJsZVN0cmVhbTsgfSB9KTtcbnZhciBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zZm9ybVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW07IH0gfSk7XG52YXIgQ29tcHJlc3Npb25TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0NvbXByZXNzaW9uU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29tcHJlc3Npb25TdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbXByZXNzaW9uU3RyZWFtX2pzXzEuUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbTsgfSB9KTtcbnZhciBEZWNvbXByZXNzaW9uU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9EZWNvbXByZXNzaW9uU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGVjb21wcmVzc2lvblN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRGVjb21wcmVzc2lvblN0cmVhbV9qc18xLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0M7QUFDaEMsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSSxJQUFJLE1BQU07QUFDMUMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzP2EwYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldEhlYWRlcnNPYmogPSBnZXRIZWFkZXJzT2JqO1xuZXhwb3J0cy5kZWZhdWx0SGVhZGVyc1NlcmlhbGl6ZXIgPSBkZWZhdWx0SGVhZGVyc1NlcmlhbGl6ZXI7XG5leHBvcnRzLmZha2VQcm9taXNlID0gZmFrZVByb21pc2U7XG5leHBvcnRzLmlzQXJyYXlCdWZmZXJWaWV3ID0gaXNBcnJheUJ1ZmZlclZpZXc7XG5leHBvcnRzLmlzTm9kZVJlYWRhYmxlID0gaXNOb2RlUmVhZGFibGU7XG5leHBvcnRzLmNyZWF0ZURlZmVycmVkUHJvbWlzZSA9IGNyZWF0ZURlZmVycmVkUHJvbWlzZTtcbmZ1bmN0aW9uIGlzSGVhZGVyc0luc3RhbmNlKG9iaikge1xuICAgIHJldHVybiBvYmo/LmZvckVhY2ggIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEhlYWRlcnNPYmooaGVhZGVycykge1xuICAgIGlmIChoZWFkZXJzID09IG51bGwgfHwgIWlzSGVhZGVyc0luc3RhbmNlKGhlYWRlcnMpKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICBjb25zdCBvYmogPSB7fTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gZGVmYXVsdEhlYWRlcnNTZXJpYWxpemVyKGhlYWRlcnMsIG9uQ29udGVudExlbmd0aCkge1xuICAgIGNvbnN0IGhlYWRlckFycmF5ID0gW107XG4gICAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChvbkNvbnRlbnRMZW5ndGggJiYga2V5ID09PSAnY29udGVudC1sZW5ndGgnKSB7XG4gICAgICAgICAgICBvbkNvbnRlbnRMZW5ndGgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGhlYWRlckFycmF5LnB1c2goYCR7a2V5fTogJHt2YWx1ZX1gKTtcbiAgICB9KTtcbiAgICByZXR1cm4gaGVhZGVyQXJyYXk7XG59XG5mdW5jdGlvbiBpc1Byb21pc2UodmFsKSB7XG4gICAgcmV0dXJuIHZhbD8udGhlbiAhPSBudWxsO1xufVxuZnVuY3Rpb24gZmFrZVByb21pc2UodmFsdWUpIHtcbiAgICBpZiAoaXNQcm9taXNlKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIC8vIFdyaXRlIGEgZmFrZSBwcm9taXNlIHRvIGF2b2lkIHRoZSBwcm9taXNlIGNvbnN0cnVjdG9yXG4gICAgLy8gYmVpbmcgY2FsbGVkIHdpdGggYG5ldyBQcm9taXNlYCBpbiB0aGUgYnJvd3Nlci5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aGVuKHJlc29sdmUpIHtcbiAgICAgICAgICAgIGlmIChyZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tSZXN1bHQgPSByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNQcm9taXNlKGNhbGxiYWNrUmVzdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tSZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWtlUHJvbWlzZShjYWxsYmFja1Jlc3VsdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgY2F0Y2goKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgZmluYWxseShjYikge1xuICAgICAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tSZXN1bHQgPSBjYigpO1xuICAgICAgICAgICAgICAgIGlmIChpc1Byb21pc2UoY2FsbGJhY2tSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFja1Jlc3VsdC50aGVuKCgpID0+IHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZha2VQcm9taXNlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1Byb21pc2UnLFxuICAgIH07XG59XG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyhvYmopIHtcbiAgICByZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqLmJ1ZmZlciAhPSBudWxsICYmIG9iai5ieXRlTGVuZ3RoICE9IG51bGwgJiYgb2JqLmJ5dGVPZmZzZXQgIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzTm9kZVJlYWRhYmxlKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmoucGlwZSAhPSBudWxsO1xufVxuZnVuY3Rpb24gY3JlYXRlRGVmZXJyZWRQcm9taXNlKCkge1xuICAgIGxldCByZXNvbHZlRm47XG4gICAgbGV0IHJlamVjdEZuO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBkZWZlcnJlZFByb21pc2VFeGVjdXRvcihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcmVzb2x2ZUZuID0gcmVzb2x2ZTtcbiAgICAgICAgcmVqZWN0Rm4gPSByZWplY3Q7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvbWlzZSxcbiAgICAgICAgZ2V0IHJlc29sdmUoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZUZuO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgcmVqZWN0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdEZuO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/createServerAdapter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createServerAdapter = createServerAdapter;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* eslint-disable @typescript-eslint/ban-types */\nconst DefaultFetchAPI = tslib_1.__importStar(__webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\"));\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nconst uwebsockets_js_1 = __webpack_require__(/*! ./uwebsockets.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\");\nasync function handleWaitUntils(waitUntilPromises) {\n    await Promise.allSettled(waitUntilPromises);\n}\n// Required for envs like nextjs edge runtime\nfunction isRequestAccessible(serverContext) {\n    try {\n        return !!serverContext?.request;\n    }\n    catch {\n        return false;\n    }\n}\nconst EMPTY_OBJECT = {};\nfunction createServerAdapter(serverAdapterBaseObject, options) {\n    const fetchAPI = {\n        ...DefaultFetchAPI,\n        ...options?.fetchAPI,\n    };\n    const givenHandleRequest = typeof serverAdapterBaseObject === 'function'\n        ? serverAdapterBaseObject\n        : serverAdapterBaseObject.handle;\n    const onRequestHooks = [];\n    const onResponseHooks = [];\n    if (options?.plugins != null) {\n        for (const plugin of options.plugins) {\n            if (plugin.onRequest) {\n                onRequestHooks.push(plugin.onRequest);\n            }\n            if (plugin.onResponse) {\n                onResponseHooks.push(plugin.onResponse);\n            }\n        }\n    }\n    const handleRequest = onRequestHooks.length > 0 || onResponseHooks.length > 0\n        ? function handleRequest(request, serverContext) {\n            let requestHandler = givenHandleRequest;\n            let response;\n            if (onRequestHooks.length === 0) {\n                return handleEarlyResponse();\n            }\n            let url = new Proxy(EMPTY_OBJECT, {\n                get(_target, prop, _receiver) {\n                    url = new fetchAPI.URL(request.url, 'http://localhost');\n                    return Reflect.get(url, prop, url);\n                },\n            });\n            const onRequestHooksIteration$ = (0, utils_js_1.iterateAsyncVoid)(onRequestHooks, (onRequestHook, stopEarly) => onRequestHook({\n                request,\n                setRequest(newRequest) {\n                    request = newRequest;\n                },\n                serverContext,\n                fetchAPI,\n                url,\n                requestHandler,\n                setRequestHandler(newRequestHandler) {\n                    requestHandler = newRequestHandler;\n                },\n                endResponse(newResponse) {\n                    response = newResponse;\n                    if (newResponse) {\n                        stopEarly();\n                    }\n                },\n            }));\n            function handleResponse(response) {\n                if (onResponseHooks.length === 0) {\n                    return response;\n                }\n                const onResponseHookPayload = {\n                    request,\n                    response,\n                    serverContext,\n                    setResponse(newResponse) {\n                        response = newResponse;\n                    },\n                    fetchAPI,\n                };\n                const onResponseHooksIteration$ = (0, utils_js_1.iterateAsyncVoid)(onResponseHooks, onResponseHook => onResponseHook(onResponseHookPayload));\n                if ((0, utils_js_1.isPromise)(onResponseHooksIteration$)) {\n                    return onResponseHooksIteration$.then(() => response);\n                }\n                return response;\n            }\n            function handleEarlyResponse() {\n                if (!response) {\n                    const response$ = requestHandler(request, serverContext);\n                    if ((0, utils_js_1.isPromise)(response$)) {\n                        return response$.then(handleResponse);\n                    }\n                    return handleResponse(response$);\n                }\n                return handleResponse(response);\n            }\n            if ((0, utils_js_1.isPromise)(onRequestHooksIteration$)) {\n                return onRequestHooksIteration$.then(handleEarlyResponse);\n            }\n            return handleEarlyResponse();\n        }\n        : givenHandleRequest;\n    // TODO: Remove this on the next major version\n    function handleNodeRequest(nodeRequest, ...ctx) {\n        const serverContext = ctx.length > 1 ? (0, utils_js_1.completeAssign)(...ctx) : ctx[0] || {};\n        const request = (0, utils_js_1.normalizeNodeRequest)(nodeRequest, fetchAPI.Request);\n        return handleRequest(request, serverContext);\n    }\n    function handleNodeRequestAndResponse(nodeRequest, nodeResponseOrContainer, ...ctx) {\n        const nodeResponse = nodeResponseOrContainer.raw || nodeResponseOrContainer;\n        utils_js_1.nodeRequestResponseMap.set(nodeRequest, nodeResponse);\n        return handleNodeRequest(nodeRequest, ...ctx);\n    }\n    function requestListener(nodeRequest, nodeResponse, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            req: nodeRequest,\n            res: nodeResponse,\n            waitUntil(cb) {\n                waitUntilPromises.push(cb.catch(err => console.error(err)));\n            },\n        };\n        let response$;\n        try {\n            response$ = handleNodeRequestAndResponse(nodeRequest, nodeResponse, defaultServerContext, ...ctx);\n        }\n        catch (err) {\n            response$ = (0, utils_js_1.handleErrorFromRequestHandler)(err, fetchAPI.Response);\n        }\n        if ((0, utils_js_1.isPromise)(response$)) {\n            return response$\n                .catch((e) => (0, utils_js_1.handleErrorFromRequestHandler)(e, fetchAPI.Response))\n                .then(response => (0, utils_js_1.sendNodeResponse)(response, nodeResponse, nodeRequest))\n                .catch(err => {\n                console.error(`Unexpected error while handling request: ${err.message || err}`);\n            });\n        }\n        try {\n            return (0, utils_js_1.sendNodeResponse)(response$, nodeResponse, nodeRequest);\n        }\n        catch (err) {\n            console.error(`Unexpected error while handling request: ${err.message || err}`);\n        }\n    }\n    function handleUWS(res, req, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            res,\n            req,\n            waitUntil(cb) {\n                waitUntilPromises.push(cb.catch(err => console.error(err)));\n            },\n        };\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0, utils_js_1.completeAssign)(defaultServerContext, ...ctx)\n            : defaultServerContext;\n        const signal = new utils_js_1.ServerAdapterRequestAbortSignal();\n        const originalResEnd = res.end.bind(res);\n        let resEnded = false;\n        res.end = function (data) {\n            resEnded = true;\n            return originalResEnd(data);\n        };\n        const originalOnAborted = res.onAborted.bind(res);\n        originalOnAborted(function () {\n            signal.sendAbort();\n        });\n        res.onAborted = function (cb) {\n            signal.addEventListener('abort', cb);\n        };\n        const request = (0, uwebsockets_js_1.getRequestFromUWSRequest)({\n            req,\n            res,\n            fetchAPI,\n            signal,\n        });\n        let response$;\n        try {\n            response$ = handleRequest(request, serverContext);\n        }\n        catch (err) {\n            response$ = (0, utils_js_1.handleErrorFromRequestHandler)(err, fetchAPI.Response);\n        }\n        if ((0, utils_js_1.isPromise)(response$)) {\n            return response$\n                .catch((e) => (0, utils_js_1.handleErrorFromRequestHandler)(e, fetchAPI.Response))\n                .then(response => {\n                if (!signal.aborted && !resEnded) {\n                    return (0, uwebsockets_js_1.sendResponseToUwsOpts)(res, response, signal);\n                }\n            })\n                .catch(err => {\n                console.error(`Unexpected error while handling request: \\n${err.stack || err.message || err}`);\n            });\n        }\n        try {\n            if (!signal.aborted && !resEnded) {\n                return (0, uwebsockets_js_1.sendResponseToUwsOpts)(res, response$, signal);\n            }\n        }\n        catch (err) {\n            console.error(`Unexpected error while handling request: \\n${err.stack || err.message || err}`);\n        }\n    }\n    function handleEvent(event, ...ctx) {\n        if (!event.respondWith || !event.request) {\n            throw new TypeError(`Expected FetchEvent, got ${event}`);\n        }\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0, utils_js_1.completeAssign)({}, event, ...filteredCtxParts)\n            : (0, utils_js_1.isolateObject)(event);\n        const response$ = handleRequest(event.request, serverContext);\n        event.respondWith(response$);\n    }\n    function handleRequestWithWaitUntil(request, ...ctx) {\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        let waitUntilPromises;\n        const serverContext = filteredCtxParts.length > 1\n            ? (0, utils_js_1.completeAssign)({}, ...filteredCtxParts)\n            : (0, utils_js_1.isolateObject)(filteredCtxParts[0], filteredCtxParts[0] == null || filteredCtxParts[0].waitUntil == null\n                ? (waitUntilPromises = [])\n                : undefined);\n        const response$ = handleRequest(request, serverContext);\n        if (waitUntilPromises?.length) {\n            return handleWaitUntils(waitUntilPromises).then(() => response$);\n        }\n        return response$;\n    }\n    const fetchFn = (input, ...maybeCtx) => {\n        if (typeof input === 'string' || 'href' in input) {\n            const [initOrCtx, ...restOfCtx] = maybeCtx;\n            if ((0, utils_js_1.isRequestInit)(initOrCtx)) {\n                const request = new fetchAPI.Request(input, initOrCtx);\n                const res$ = handleRequestWithWaitUntil(request, ...restOfCtx);\n                return (0, utils_js_1.handleAbortSignalAndPromiseResponse)(res$, initOrCtx?.signal);\n            }\n            const request = new fetchAPI.Request(input);\n            return handleRequestWithWaitUntil(request, ...maybeCtx);\n        }\n        const res$ = handleRequestWithWaitUntil(input, ...maybeCtx);\n        return (0, utils_js_1.handleAbortSignalAndPromiseResponse)(res$, input._signal);\n    };\n    const genericRequestHandler = (input, ...maybeCtx) => {\n        // If it is a Node request\n        const [initOrCtxOrRes, ...restOfCtx] = maybeCtx;\n        if ((0, utils_js_1.isNodeRequest)(input)) {\n            if (!(0, utils_js_1.isServerResponse)(initOrCtxOrRes)) {\n                throw new TypeError(`Expected ServerResponse, got ${initOrCtxOrRes}`);\n            }\n            return requestListener(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0, uwebsockets_js_1.isUWSResponse)(input)) {\n            return handleUWS(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0, utils_js_1.isServerResponse)(initOrCtxOrRes)) {\n            throw new TypeError('Got Node response without Node request');\n        }\n        // Is input a container object over Request?\n        if (isRequestAccessible(input)) {\n            // Is it FetchEvent?\n            if ((0, utils_js_1.isFetchEvent)(input)) {\n                return handleEvent(input, ...maybeCtx);\n            }\n            // In this input is also the context\n            return handleRequestWithWaitUntil(input.request, input, ...maybeCtx);\n        }\n        // Or is it Request itself?\n        // Then ctx is present and it is the context\n        return fetchFn(input, ...maybeCtx);\n    };\n    const adapterObj = {\n        handleRequest: handleRequestWithWaitUntil,\n        fetch: fetchFn,\n        handleNodeRequest,\n        handleNodeRequestAndResponse,\n        requestListener,\n        handleEvent,\n        handleUWS,\n        handle: genericRequestHandler,\n    };\n    const serverAdapter = new Proxy(genericRequestHandler, {\n        // It should have all the attributes of the handler function and the server instance\n        has: (_, prop) => {\n            return (prop in adapterObj ||\n                prop in genericRequestHandler ||\n                (serverAdapterBaseObject && prop in serverAdapterBaseObject));\n        },\n        get: (_, prop) => {\n            const adapterProp = adapterObj[prop];\n            if (adapterProp) {\n                if (adapterProp.bind) {\n                    return adapterProp.bind(adapterObj);\n                }\n                return adapterProp;\n            }\n            const handleProp = genericRequestHandler[prop];\n            if (handleProp) {\n                if (handleProp.bind) {\n                    return handleProp.bind(genericRequestHandler);\n                }\n                return handleProp;\n            }\n            if (serverAdapterBaseObject) {\n                const serverAdapterBaseObjectProp = serverAdapterBaseObject[prop];\n                if (serverAdapterBaseObjectProp) {\n                    if (serverAdapterBaseObjectProp.bind) {\n                        return function (...args) {\n                            const returnedVal = serverAdapterBaseObject[prop](...args);\n                            if (returnedVal === serverAdapterBaseObject) {\n                                return serverAdapter;\n                            }\n                            return returnedVal;\n                        };\n                    }\n                    return serverAdapterBaseObjectProp;\n                }\n            }\n        },\n        apply(_, __, args) {\n            return genericRequestHandler(...args);\n        },\n    });\n    return serverAdapter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Response = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./createServerAdapter.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/types.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useCors.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useErrorHandling.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useContentEncoding.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./uwebsockets.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\"), exports);\nvar fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return fetch_1.Response; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLHFHQUEwQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBb0I7QUFDakQscUJBQXFCLG1CQUFPLENBQUMsNkZBQXNCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLCtHQUErQjtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyxtSEFBaUM7QUFDOUQscUJBQXFCLG1CQUFPLENBQUMscUZBQWtCO0FBQy9DLGNBQWMsbUJBQU8sQ0FBQyx5RkFBb0I7QUFDMUMsNENBQTJDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvaW5kZXguanM/ODExMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVzcG9uc2UgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3JlYXRlU2VydmVyQWRhcHRlci5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlscy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbHVnaW5zL3R5cGVzLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BsdWdpbnMvdXNlQ29ycy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbHVnaW5zL3VzZUVycm9ySGFuZGxpbmcuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGx1Z2lucy91c2VDb250ZW50RW5jb2RpbmcuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXdlYnNvY2tldHMuanNcIiksIGV4cG9ydHMpO1xudmFyIGZldGNoXzEgPSByZXF1aXJlKFwiQHdoYXR3Zy1ub2RlL2ZldGNoXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZldGNoXzEuUmVzcG9uc2U7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/types.js ***!
  \***************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useContentEncoding = useContentEncoding;\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nfunction useContentEncoding() {\n    const encodingMap = new WeakMap();\n    return {\n        onRequest({ request, setRequest, fetchAPI, endResponse }) {\n            if (request.body) {\n                const contentEncodingHeader = request.headers.get('content-encoding');\n                if (contentEncodingHeader && contentEncodingHeader !== 'none') {\n                    const contentEncodings = contentEncodingHeader?.split(',');\n                    if (!contentEncodings.every(encoding => (0, utils_js_1.getSupportedEncodings)(fetchAPI).includes(encoding))) {\n                        endResponse(new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                            status: 415,\n                            statusText: 'Unsupported Media Type',\n                        }));\n                        return;\n                    }\n                    let newBody = request.body;\n                    for (const contentEncoding of contentEncodings) {\n                        newBody = newBody.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n                    }\n                    request = new fetchAPI.Request(request.url, {\n                        body: newBody,\n                        cache: request.cache,\n                        credentials: request.credentials,\n                        headers: request.headers,\n                        integrity: request.integrity,\n                        keepalive: request.keepalive,\n                        method: request.method,\n                        mode: request.mode,\n                        redirect: request.redirect,\n                        referrer: request.referrer,\n                        referrerPolicy: request.referrerPolicy,\n                        signal: request.signal,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore - not in the TS types yet\n                        duplex: 'half',\n                    });\n                    setRequest(request);\n                }\n            }\n            const acceptEncoding = request.headers.get('accept-encoding');\n            if (acceptEncoding) {\n                encodingMap.set(request, acceptEncoding.split(','));\n            }\n        },\n        onResponse({ request, response, setResponse, fetchAPI, serverContext }) {\n            const waitUntil = serverContext.waitUntil?.bind(serverContext) || (() => { });\n            // Hack for avoiding to create whatwg-node to create a readable stream until it's needed\n            if (response['bodyInit'] || response.body) {\n                const encodings = encodingMap.get(request);\n                if (encodings) {\n                    const supportedEncoding = encodings.find(encoding => (0, utils_js_1.getSupportedEncodings)(fetchAPI).includes(encoding));\n                    if (supportedEncoding) {\n                        const compressionStream = new fetchAPI.CompressionStream(supportedEncoding);\n                        // To calculate final content-length\n                        const contentLength = response.headers.get('content-length');\n                        if (contentLength) {\n                            const bufOfRes = response._buffer;\n                            if (bufOfRes) {\n                                const writer = compressionStream.writable.getWriter();\n                                waitUntil(writer.write(bufOfRes));\n                                waitUntil(writer.close());\n                                const uint8Arrays$ = (0, utils_js_1.isReadable)(compressionStream.readable['readable'])\n                                    ? collectReadableValues(compressionStream.readable['readable'])\n                                    : (0, utils_js_1.isAsyncIterable)(compressionStream.readable)\n                                        ? collectAsyncIterableValues(compressionStream.readable)\n                                        : collectReadableStreamValues(compressionStream.readable);\n                                return uint8Arrays$.then(uint8Arrays => {\n                                    const chunks = uint8Arrays.flatMap(uint8Array => [...uint8Array]);\n                                    const uint8Array = new Uint8Array(chunks);\n                                    const newHeaders = new fetchAPI.Headers(response.headers);\n                                    newHeaders.set('content-encoding', supportedEncoding);\n                                    newHeaders.set('content-length', uint8Array.byteLength.toString());\n                                    const compressedResponse = new fetchAPI.Response(uint8Array, {\n                                        ...response,\n                                        headers: newHeaders,\n                                    });\n                                    utils_js_1.decompressedResponseMap.set(compressedResponse, response);\n                                    setResponse(compressedResponse);\n                                    waitUntil(compressionStream.writable.close());\n                                });\n                            }\n                        }\n                        const newHeaders = new fetchAPI.Headers(response.headers);\n                        newHeaders.set('content-encoding', supportedEncoding);\n                        newHeaders.delete('content-length');\n                        const compressedBody = response.body.pipeThrough(compressionStream);\n                        const compressedResponse = new fetchAPI.Response(compressedBody, {\n                            status: response.status,\n                            statusText: response.statusText,\n                            headers: newHeaders,\n                        });\n                        utils_js_1.decompressedResponseMap.set(compressedResponse, response);\n                        setResponse(compressedResponse);\n                    }\n                }\n            }\n        },\n    };\n}\nfunction collectReadableValues(readable) {\n    const values = [];\n    readable.on('data', value => values.push(value));\n    return new Promise((resolve, reject) => {\n        readable.once('end', () => resolve(values));\n        readable.once('error', reject);\n    });\n}\nasync function collectAsyncIterableValues(asyncIterable) {\n    const values = [];\n    for await (const value of asyncIterable) {\n        values.push(value);\n    }\n    return values;\n}\nasync function collectReadableStreamValues(readableStream) {\n    const reader = readableStream.getReader();\n    const values = [];\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            reader.releaseLock();\n            break;\n        }\n        else if (value) {\n            values.push(value);\n        }\n    }\n    return values;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useCors.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getCORSHeadersByRequestAndOptions = getCORSHeadersByRequestAndOptions;\nexports.useCORS = useCORS;\nfunction getCORSHeadersByRequestAndOptions(request, corsOptions) {\n    const currentOrigin = request.headers.get('origin');\n    if (corsOptions === false || currentOrigin == null) {\n        return null;\n    }\n    const headers = {};\n    // If defined origins have '*' or undefined by any means, we should allow all origins\n    if (corsOptions.origin == null ||\n        corsOptions.origin.length === 0 ||\n        corsOptions.origin.includes('*')) {\n        headers['Access-Control-Allow-Origin'] = currentOrigin;\n        // Vary by origin because there are multiple origins\n        headers['Vary'] = 'Origin';\n    }\n    else if (typeof corsOptions.origin === 'string') {\n        // If there is one specific origin is specified, use it directly\n        headers['Access-Control-Allow-Origin'] = corsOptions.origin;\n    }\n    else if (Array.isArray(corsOptions.origin)) {\n        // If there is only one origin defined in the array, consider it as a single one\n        if (corsOptions.origin.length === 1) {\n            headers['Access-Control-Allow-Origin'] = corsOptions.origin[0];\n        }\n        else if (corsOptions.origin.includes(currentOrigin)) {\n            // If origin is available in the headers, use it\n            headers['Access-Control-Allow-Origin'] = currentOrigin;\n            // Vary by origin because there are multiple origins\n            headers['Vary'] = 'Origin';\n        }\n        else {\n            // There is no origin found in the headers, so we should return null\n            headers['Access-Control-Allow-Origin'] = 'null';\n        }\n    }\n    if (corsOptions.methods?.length) {\n        headers['Access-Control-Allow-Methods'] = corsOptions.methods.join(', ');\n    }\n    else {\n        const requestMethod = request.headers.get('access-control-request-method');\n        if (requestMethod) {\n            headers['Access-Control-Allow-Methods'] = requestMethod;\n        }\n    }\n    if (corsOptions.allowedHeaders?.length) {\n        headers['Access-Control-Allow-Headers'] = corsOptions.allowedHeaders.join(', ');\n    }\n    else {\n        const requestHeaders = request.headers.get('access-control-request-headers');\n        if (requestHeaders) {\n            headers['Access-Control-Allow-Headers'] = requestHeaders;\n            if (headers['Vary']) {\n                headers['Vary'] += ', Access-Control-Request-Headers';\n            }\n            else {\n                headers['Vary'] = 'Access-Control-Request-Headers';\n            }\n        }\n    }\n    if (corsOptions.credentials != null) {\n        if (corsOptions.credentials === true) {\n            headers['Access-Control-Allow-Credentials'] = 'true';\n        }\n    }\n    else if (headers['Access-Control-Allow-Origin'] !== '*') {\n        headers['Access-Control-Allow-Credentials'] = 'true';\n    }\n    if (corsOptions.exposedHeaders) {\n        headers['Access-Control-Expose-Headers'] = corsOptions.exposedHeaders.join(', ');\n    }\n    if (corsOptions.maxAge) {\n        headers['Access-Control-Max-Age'] = corsOptions.maxAge.toString();\n    }\n    return headers;\n}\nasync function getCORSResponseHeaders(request, corsOptionsFactory, serverContext) {\n    const corsOptions = await corsOptionsFactory(request, serverContext);\n    return getCORSHeadersByRequestAndOptions(request, corsOptions);\n}\nfunction useCORS(options) {\n    let corsOptionsFactory = () => ({});\n    if (options != null) {\n        if (typeof options === 'function') {\n            corsOptionsFactory = options;\n        }\n        else if (typeof options === 'object') {\n            const corsOptions = {\n                ...options,\n            };\n            corsOptionsFactory = () => corsOptions;\n        }\n        else if (options === false) {\n            corsOptionsFactory = () => false;\n        }\n    }\n    return {\n        onRequest({ request, fetchAPI, endResponse }) {\n            if (request.method.toUpperCase() === 'OPTIONS') {\n                const response = new fetchAPI.Response(null, {\n                    status: 204,\n                    // Safari (and potentially other browsers) need content-length 0,\n                    // for 204 or they just hang waiting for a body\n                    // see: https://github.com/expressjs/cors/blob/master/lib/index.js#L176\n                    headers: {\n                        'Content-Length': '0',\n                    },\n                });\n                endResponse(response);\n            }\n        },\n        async onResponse({ request, serverContext, response }) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const headers = await getCORSResponseHeaders(request, corsOptionsFactory, serverContext);\n            if (headers != null) {\n                for (const headerName in headers) {\n                    response.headers.set(headerName, headers[headerName]);\n                }\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HTTPError = void 0;\nexports.createDefaultErrorHandler = createDefaultErrorHandler;\nexports.useErrorHandling = useErrorHandling;\nconst fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nfunction createDefaultErrorHandler(ResponseCtor = fetch_1.Response) {\n    return function defaultErrorHandler(e) {\n        if (e.details || e.status || e.headers || e.name === 'HTTPError') {\n            return new ResponseCtor(typeof e.details === 'object' ? JSON.stringify(e.details) : e.message, {\n                status: e.status,\n                headers: e.headers || {},\n            });\n        }\n        console.error(e);\n        return createDefaultErrorResponse(ResponseCtor);\n    };\n}\nfunction createDefaultErrorResponse(ResponseCtor) {\n    if (ResponseCtor.error) {\n        return ResponseCtor.error();\n    }\n    return new ResponseCtor(null, { status: 500 });\n}\nclass HTTPError extends Error {\n    status;\n    message;\n    headers;\n    details;\n    name = 'HTTPError';\n    constructor(status = 500, message, headers = {}, details) {\n        super(message);\n        this.status = status;\n        this.message = message;\n        this.headers = headers;\n        this.details = details;\n        Error.captureStackTrace(this, HTTPError);\n    }\n}\nexports.HTTPError = HTTPError;\nfunction useErrorHandling(onError) {\n    return {\n        onRequest({ requestHandler, setRequestHandler, fetchAPI }) {\n            const errorHandler = onError || createDefaultErrorHandler(fetchAPI.Response);\n            setRequestHandler(function handlerWithErrorHandling(request, serverContext) {\n                try {\n                    const response$ = requestHandler(request, serverContext);\n                    if ((0, utils_js_1.isPromise)(response$)) {\n                        return response$.catch(e => errorHandler(e, request, serverContext) ||\n                            createDefaultErrorResponse(fetchAPI.Response));\n                    }\n                    return response$;\n                }\n                catch (e) {\n                    return (errorHandler(e, request, serverContext) || createDefaultErrorResponse(fetchAPI.Response));\n                }\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQ0FBaUM7QUFDakMsd0JBQXdCO0FBQ3hCLGdCQUFnQixtQkFBTyxDQUFDLHlGQUFvQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQywwRUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsYUFBYTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxvQkFBb0IsNkNBQTZDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXhhbXBsZS10b2Rvcy1hcHAvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzPzJmYWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhUVFBFcnJvciA9IHZvaWQgMDtcbmV4cG9ydHMuY3JlYXRlRGVmYXVsdEVycm9ySGFuZGxlciA9IGNyZWF0ZURlZmF1bHRFcnJvckhhbmRsZXI7XG5leHBvcnRzLnVzZUVycm9ySGFuZGxpbmcgPSB1c2VFcnJvckhhbmRsaW5nO1xuY29uc3QgZmV0Y2hfMSA9IHJlcXVpcmUoXCJAd2hhdHdnLW5vZGUvZmV0Y2hcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWxzLmpzXCIpO1xuZnVuY3Rpb24gY3JlYXRlRGVmYXVsdEVycm9ySGFuZGxlcihSZXNwb25zZUN0b3IgPSBmZXRjaF8xLlJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGRlZmF1bHRFcnJvckhhbmRsZXIoZSkge1xuICAgICAgICBpZiAoZS5kZXRhaWxzIHx8IGUuc3RhdHVzIHx8IGUuaGVhZGVycyB8fCBlLm5hbWUgPT09ICdIVFRQRXJyb3InKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlc3BvbnNlQ3Rvcih0eXBlb2YgZS5kZXRhaWxzID09PSAnb2JqZWN0JyA/IEpTT04uc3RyaW5naWZ5KGUuZGV0YWlscykgOiBlLm1lc3NhZ2UsIHtcbiAgICAgICAgICAgICAgICBzdGF0dXM6IGUuc3RhdHVzLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IGUuaGVhZGVycyB8fCB7fSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHJldHVybiBjcmVhdGVEZWZhdWx0RXJyb3JSZXNwb25zZShSZXNwb25zZUN0b3IpO1xuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVEZWZhdWx0RXJyb3JSZXNwb25zZShSZXNwb25zZUN0b3IpIHtcbiAgICBpZiAoUmVzcG9uc2VDdG9yLmVycm9yKSB7XG4gICAgICAgIHJldHVybiBSZXNwb25zZUN0b3IuZXJyb3IoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZUN0b3IobnVsbCwgeyBzdGF0dXM6IDUwMCB9KTtcbn1cbmNsYXNzIEhUVFBFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBzdGF0dXM7XG4gICAgbWVzc2FnZTtcbiAgICBoZWFkZXJzO1xuICAgIGRldGFpbHM7XG4gICAgbmFtZSA9ICdIVFRQRXJyb3InO1xuICAgIGNvbnN0cnVjdG9yKHN0YXR1cyA9IDUwMCwgbWVzc2FnZSwgaGVhZGVycyA9IHt9LCBkZXRhaWxzKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gaGVhZGVycztcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gZGV0YWlscztcbiAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgSFRUUEVycm9yKTtcbiAgICB9XG59XG5leHBvcnRzLkhUVFBFcnJvciA9IEhUVFBFcnJvcjtcbmZ1bmN0aW9uIHVzZUVycm9ySGFuZGxpbmcob25FcnJvcikge1xuICAgIHJldHVybiB7XG4gICAgICAgIG9uUmVxdWVzdCh7IHJlcXVlc3RIYW5kbGVyLCBzZXRSZXF1ZXN0SGFuZGxlciwgZmV0Y2hBUEkgfSkge1xuICAgICAgICAgICAgY29uc3QgZXJyb3JIYW5kbGVyID0gb25FcnJvciB8fCBjcmVhdGVEZWZhdWx0RXJyb3JIYW5kbGVyKGZldGNoQVBJLlJlc3BvbnNlKTtcbiAgICAgICAgICAgIHNldFJlcXVlc3RIYW5kbGVyKGZ1bmN0aW9uIGhhbmRsZXJXaXRoRXJyb3JIYW5kbGluZyhyZXF1ZXN0LCBzZXJ2ZXJDb250ZXh0KSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UkID0gcmVxdWVzdEhhbmRsZXIocmVxdWVzdCwgc2VydmVyQ29udGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc1Byb21pc2UpKHJlc3BvbnNlJCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZSQuY2F0Y2goZSA9PiBlcnJvckhhbmRsZXIoZSwgcmVxdWVzdCwgc2VydmVyQ29udGV4dCkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVEZWZhdWx0RXJyb3JSZXNwb25zZShmZXRjaEFQSS5SZXNwb25zZSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZSQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoZXJyb3JIYW5kbGVyKGUsIHJlcXVlc3QsIHNlcnZlckNvbnRleHQpIHx8IGNyZWF0ZURlZmF1bHRFcnJvclJlc3BvbnNlKGZldGNoQVBJLlJlc3BvbnNlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/types.js ***!
  \*******************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decompressedResponseMap = exports.nodeRequestResponseMap = exports.ServerAdapterRequestAbortSignal = void 0;\nexports.isAsyncIterable = isAsyncIterable;\nexports.normalizeNodeRequest = normalizeNodeRequest;\nexports.isReadable = isReadable;\nexports.isNodeRequest = isNodeRequest;\nexports.isServerResponse = isServerResponse;\nexports.isReadableStream = isReadableStream;\nexports.isFetchEvent = isFetchEvent;\nexports.sendNodeResponse = sendNodeResponse;\nexports.isRequestInit = isRequestInit;\nexports.completeAssign = completeAssign;\nexports.isPromise = isPromise;\nexports.iterateAsyncVoid = iterateAsyncVoid;\nexports.handleErrorFromRequestHandler = handleErrorFromRequestHandler;\nexports.isolateObject = isolateObject;\nexports.createDeferredPromise = createDeferredPromise;\nexports.handleAbortSignalAndPromiseResponse = handleAbortSignalAndPromiseResponse;\nexports.getSupportedEncodings = getSupportedEncodings;\nexports.handleResponseDecompression = handleResponseDecompression;\nconst fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nfunction isAsyncIterable(body) {\n    return (body != null && typeof body === 'object' && typeof body[Symbol.asyncIterator] === 'function');\n}\nfunction getPort(nodeRequest) {\n    if (nodeRequest.socket?.localPort) {\n        return nodeRequest.socket?.localPort;\n    }\n    const hostInHeader = nodeRequest.headers?.[':authority'] || nodeRequest.headers?.host;\n    const portInHeader = hostInHeader?.split(':')?.[1];\n    if (portInHeader) {\n        return portInHeader;\n    }\n    return 80;\n}\nfunction getHostnameWithPort(nodeRequest) {\n    if (nodeRequest.headers?.[':authority']) {\n        return nodeRequest.headers?.[':authority'];\n    }\n    if (nodeRequest.headers?.host) {\n        return nodeRequest.headers?.host;\n    }\n    const port = getPort(nodeRequest);\n    if (nodeRequest.hostname) {\n        return nodeRequest.hostname + ':' + port;\n    }\n    const localIp = nodeRequest.socket?.localAddress;\n    if (localIp && !localIp?.includes('::') && !localIp?.includes('ffff')) {\n        return `${localIp}:${port}`;\n    }\n    return 'localhost';\n}\nfunction buildFullUrl(nodeRequest) {\n    const hostnameWithPort = getHostnameWithPort(nodeRequest);\n    const protocol = nodeRequest.protocol || (nodeRequest.socket?.encrypted ? 'https' : 'http');\n    const endpoint = nodeRequest.originalUrl || nodeRequest.url || '/graphql';\n    return `${protocol}://${hostnameWithPort}${endpoint}`;\n}\nfunction isRequestBody(body) {\n    const stringTag = body[Symbol.toStringTag];\n    if (typeof body === 'string' ||\n        stringTag === 'Uint8Array' ||\n        stringTag === 'Blob' ||\n        stringTag === 'FormData' ||\n        stringTag === 'URLSearchParams' ||\n        isAsyncIterable(body)) {\n        return true;\n    }\n    return false;\n}\nclass ServerAdapterRequestAbortSignal extends EventTarget {\n    aborted = false;\n    _onabort = null;\n    reason;\n    throwIfAborted() {\n        if (this.aborted) {\n            throw this.reason;\n        }\n    }\n    sendAbort() {\n        this.reason = new DOMException('This operation was aborted', 'AbortError');\n        this.aborted = true;\n        this.dispatchEvent(new Event('abort'));\n    }\n    get onabort() {\n        return this._onabort;\n    }\n    set onabort(value) {\n        this._onabort = value;\n        if (value) {\n            this.addEventListener('abort', value);\n        }\n        else {\n            this.removeEventListener('abort', value);\n        }\n    }\n    any(signals) {\n        return AbortSignal.any([...signals]);\n    }\n}\nexports.ServerAdapterRequestAbortSignal = ServerAdapterRequestAbortSignal;\nlet bunNodeCompatModeWarned = false;\nexports.nodeRequestResponseMap = new WeakMap();\nfunction normalizeNodeRequest(nodeRequest, RequestCtor) {\n    const rawRequest = nodeRequest.raw || nodeRequest.req || nodeRequest;\n    let fullUrl = buildFullUrl(rawRequest);\n    if (nodeRequest.query) {\n        const url = new fetch_1.URL(fullUrl);\n        for (const key in nodeRequest.query) {\n            url.searchParams.set(key, nodeRequest.query[key]);\n        }\n        fullUrl = url.toString();\n    }\n    let signal;\n    const nodeResponse = exports.nodeRequestResponseMap.get(nodeRequest);\n    exports.nodeRequestResponseMap.delete(nodeRequest);\n    let normalizedHeaders = nodeRequest.headers;\n    if (nodeRequest.headers?.[':method']) {\n        normalizedHeaders = {};\n        for (const key in nodeRequest.headers) {\n            if (!key.startsWith(':')) {\n                normalizedHeaders[key] = nodeRequest.headers[key];\n            }\n        }\n    }\n    if (nodeResponse?.once) {\n        let sendAbortSignal;\n        // If ponyfilled\n        if (RequestCtor !== globalThis.Request) {\n            signal = new ServerAdapterRequestAbortSignal();\n            sendAbortSignal = () => signal.sendAbort();\n        }\n        else {\n            const controller = new AbortController();\n            signal = controller.signal;\n            sendAbortSignal = () => controller.abort();\n        }\n        const closeEventListener = () => {\n            if (signal && !signal.aborted) {\n                rawRequest.aborted = true;\n                sendAbortSignal();\n            }\n        };\n        nodeResponse.once('error', closeEventListener);\n        nodeResponse.once('close', closeEventListener);\n        nodeResponse.once('finish', () => {\n            nodeResponse.removeListener('close', closeEventListener);\n        });\n    }\n    if (nodeRequest.method === 'GET' || nodeRequest.method === 'HEAD') {\n        return new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal,\n        });\n    }\n    /**\n     * Some Node server frameworks like Serverless Express sends a dummy object with body but as a Buffer not string\n     * so we do those checks to see is there something we can use directly as BodyInit\n     * because the presence of body means the request stream is already consumed and,\n     * rawRequest cannot be used as BodyInit/ReadableStream by Fetch API in this case.\n     */\n    const maybeParsedBody = nodeRequest.body;\n    if (maybeParsedBody != null && Object.keys(maybeParsedBody).length > 0) {\n        if (isRequestBody(maybeParsedBody)) {\n            return new RequestCtor(fullUrl, {\n                method: nodeRequest.method,\n                headers: normalizedHeaders,\n                body: maybeParsedBody,\n                signal,\n            });\n        }\n        const request = new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal,\n        });\n        if (!request.headers.get('content-type')?.includes('json')) {\n            request.headers.set('content-type', 'application/json; charset=utf-8');\n        }\n        return new Proxy(request, {\n            get: (target, prop, receiver) => {\n                switch (prop) {\n                    case 'json':\n                        return async () => maybeParsedBody;\n                    case 'text':\n                        return async () => JSON.stringify(maybeParsedBody);\n                    default:\n                        return Reflect.get(target, prop, receiver);\n                }\n            },\n        });\n    }\n    // Temporary workaround for a bug in Bun Node compat mode\n    if (globalThis.process?.versions?.bun && isReadable(rawRequest)) {\n        if (!bunNodeCompatModeWarned) {\n            bunNodeCompatModeWarned = true;\n            console.warn(`You use Bun Node compatibility mode, which is not recommended!\nIt will affect your performance. Please check our Bun integration recipe, and avoid using 'http' for your server implementation.`);\n        }\n        return new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            duplex: 'half',\n            body: new ReadableStream({\n                start(controller) {\n                    rawRequest.on('data', chunk => {\n                        controller.enqueue(chunk);\n                    });\n                    rawRequest.on('error', e => {\n                        controller.error(e);\n                    });\n                    rawRequest.on('end', () => {\n                        controller.close();\n                    });\n                },\n                cancel(e) {\n                    rawRequest.destroy(e);\n                },\n            }),\n            signal,\n        });\n    }\n    // perf: instead of spreading the object, we can just pass it as is and it performs better\n    return new RequestCtor(fullUrl, {\n        method: nodeRequest.method,\n        headers: normalizedHeaders,\n        body: rawRequest,\n        duplex: 'half',\n        signal,\n    });\n}\nfunction isReadable(stream) {\n    return stream.read != null;\n}\nfunction isNodeRequest(request) {\n    return isReadable(request);\n}\nfunction isServerResponse(stream) {\n    // Check all used functions are defined\n    return (stream != null &&\n        stream.setHeader != null &&\n        stream.end != null &&\n        stream.once != null &&\n        stream.write != null);\n}\nfunction isReadableStream(stream) {\n    return stream != null && stream.getReader != null;\n}\nfunction isFetchEvent(event) {\n    return event != null && event.request != null && event.respondWith != null;\n}\nfunction configureSocket(rawRequest) {\n    rawRequest?.socket?.setTimeout?.(0);\n    rawRequest?.socket?.setNoDelay?.(true);\n    rawRequest?.socket?.setKeepAlive?.(true);\n}\nfunction endResponse(serverResponse) {\n    // @ts-expect-error Avoid arguments adaptor trampoline https://v8.dev/blog/adaptor-frame\n    serverResponse.end(null, null, null);\n}\nasync function sendAsyncIterable(serverResponse, asyncIterable) {\n    let closed = false;\n    const closeEventListener = () => {\n        closed = true;\n    };\n    serverResponse.once('error', closeEventListener);\n    serverResponse.once('close', closeEventListener);\n    serverResponse.once('finish', () => {\n        serverResponse.removeListener('close', closeEventListener);\n    });\n    for await (const chunk of asyncIterable) {\n        if (closed) {\n            break;\n        }\n        if (!serverResponse\n            // @ts-expect-error http and http2 writes are actually compatible\n            .write(chunk)) {\n            if (closed) {\n                break;\n            }\n            await new Promise(resolve => serverResponse.once('drain', resolve));\n        }\n    }\n    endResponse(serverResponse);\n}\nfunction sendNodeResponse(fetchResponse, serverResponse, nodeRequest) {\n    if (serverResponse.closed || serverResponse.destroyed || serverResponse.writableEnded) {\n        return;\n    }\n    if (!fetchResponse) {\n        serverResponse.statusCode = 404;\n        serverResponse.end();\n        return;\n    }\n    serverResponse.statusCode = fetchResponse.status;\n    serverResponse.statusMessage = fetchResponse.statusText;\n    let setCookiesSet = false;\n    fetchResponse.headers.forEach((value, key) => {\n        if (key === 'set-cookie') {\n            if (setCookiesSet) {\n                return;\n            }\n            setCookiesSet = true;\n            const setCookies = fetchResponse.headers.getSetCookie?.();\n            if (setCookies) {\n                serverResponse.setHeader('set-cookie', setCookies);\n                return;\n            }\n        }\n        serverResponse.setHeader(key, value);\n    });\n    // Optimizations for node-fetch\n    const bufOfRes = fetchResponse._buffer;\n    if (bufOfRes) {\n        // @ts-expect-error http and http2 writes are actually compatible\n        serverResponse.write(bufOfRes);\n        endResponse(serverResponse);\n        return;\n    }\n    // Other fetch implementations\n    const fetchBody = fetchResponse.body;\n    if (fetchBody == null) {\n        endResponse(serverResponse);\n        return;\n    }\n    if (fetchBody[Symbol.toStringTag] === 'Uint8Array') {\n        serverResponse\n            // @ts-expect-error http and http2 writes are actually compatible\n            .write(fetchBody);\n        endResponse(serverResponse);\n        return;\n    }\n    configureSocket(nodeRequest);\n    if (isReadable(fetchBody)) {\n        serverResponse.once('close', () => {\n            fetchBody.destroy();\n        });\n        fetchBody.pipe(serverResponse);\n        return;\n    }\n    if (isAsyncIterable(fetchBody)) {\n        return sendAsyncIterable(serverResponse, fetchBody);\n    }\n}\nfunction isRequestInit(val) {\n    return (val != null &&\n        typeof val === 'object' &&\n        ('body' in val ||\n            'cache' in val ||\n            'credentials' in val ||\n            'headers' in val ||\n            'integrity' in val ||\n            'keepalive' in val ||\n            'method' in val ||\n            'mode' in val ||\n            'redirect' in val ||\n            'referrer' in val ||\n            'referrerPolicy' in val ||\n            'signal' in val ||\n            'window' in val));\n}\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#copying_accessors\nfunction completeAssign(...args) {\n    const [target, ...sources] = args.filter(arg => arg != null && typeof arg === 'object');\n    sources.forEach(source => {\n        // modified Object.keys to Object.getOwnPropertyNames\n        // because Object.keys only returns enumerable properties\n        const descriptors = Object.getOwnPropertyNames(source).reduce((descriptors, key) => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, key);\n            if (descriptor) {\n                descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\n            }\n            return descriptors;\n        }, {});\n        // By default, Object.assign copies enumerable Symbols, too\n        Object.getOwnPropertySymbols(source).forEach(sym => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n            if (descriptor?.enumerable) {\n                descriptors[sym] = descriptor;\n            }\n        });\n        Object.defineProperties(target, descriptors);\n    });\n    return target;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction iterateAsyncVoid(iterable, callback) {\n    const iterator = iterable[Symbol.iterator]();\n    let stopEarlyFlag = false;\n    function stopEarlyFn() {\n        stopEarlyFlag = true;\n    }\n    function iterate() {\n        const { done: endOfIterator, value } = iterator.next();\n        if (endOfIterator) {\n            return;\n        }\n        const result$ = callback(value, stopEarlyFn);\n        if (isPromise(result$)) {\n            return result$.then(() => {\n                if (stopEarlyFlag) {\n                    return;\n                }\n                return iterate();\n            });\n        }\n        if (stopEarlyFlag) {\n            return;\n        }\n        return iterate();\n    }\n    return iterate();\n}\nfunction handleErrorFromRequestHandler(error, ResponseCtor) {\n    return new ResponseCtor(error.stack || error.message || error.toString(), {\n        status: error.status || 500,\n    });\n}\nfunction isolateObject(originalCtx, waitUntilPromises) {\n    if (originalCtx == null) {\n        if (waitUntilPromises == null) {\n            return {};\n        }\n        originalCtx = {};\n    }\n    const extraProps = {};\n    const deletedProps = new Set();\n    return new Proxy(originalCtx, {\n        get(originalCtx, prop) {\n            if (waitUntilPromises != null && prop === 'waitUntil') {\n                return function waitUntil(promise) {\n                    waitUntilPromises.push(promise.catch(err => console.error(err)));\n                };\n            }\n            const extraPropVal = extraProps[prop];\n            if (extraPropVal != null) {\n                if (typeof extraPropVal === 'function') {\n                    return extraPropVal.bind(extraProps);\n                }\n                return extraPropVal;\n            }\n            if (deletedProps.has(prop)) {\n                return undefined;\n            }\n            return originalCtx[prop];\n        },\n        set(_originalCtx, prop, value) {\n            extraProps[prop] = value;\n            return true;\n        },\n        has(originalCtx, prop) {\n            if (waitUntilPromises != null && prop === 'waitUntil') {\n                return true;\n            }\n            if (deletedProps.has(prop)) {\n                return false;\n            }\n            if (prop in extraProps) {\n                return true;\n            }\n            return prop in originalCtx;\n        },\n        defineProperty(_originalCtx, prop, descriptor) {\n            return Reflect.defineProperty(extraProps, prop, descriptor);\n        },\n        deleteProperty(_originalCtx, prop) {\n            if (prop in extraProps) {\n                return Reflect.deleteProperty(extraProps, prop);\n            }\n            deletedProps.add(prop);\n            return true;\n        },\n        ownKeys(originalCtx) {\n            const extraKeys = Reflect.ownKeys(extraProps);\n            const originalKeys = Reflect.ownKeys(originalCtx);\n            const deletedKeys = Array.from(deletedProps);\n            const allKeys = new Set(extraKeys.concat(originalKeys.filter(keys => !deletedKeys.includes(keys))));\n            if (waitUntilPromises != null) {\n                allKeys.add('waitUntil');\n            }\n            return Array.from(allKeys);\n        },\n        getOwnPropertyDescriptor(originalCtx, prop) {\n            if (prop in extraProps) {\n                return Reflect.getOwnPropertyDescriptor(extraProps, prop);\n            }\n            if (deletedProps.has(prop)) {\n                return undefined;\n            }\n            return Reflect.getOwnPropertyDescriptor(originalCtx, prop);\n        },\n    });\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\nfunction handleAbortSignalAndPromiseResponse(response$, abortSignal) {\n    if (isPromise(response$) && abortSignal) {\n        const deferred$ = createDeferredPromise();\n        abortSignal.addEventListener('abort', function abortSignalFetchErrorHandler() {\n            deferred$.reject(abortSignal.reason);\n        });\n        response$\n            .then(function fetchSuccessHandler(res) {\n            deferred$.resolve(res);\n        })\n            .catch(function fetchErrorHandler(err) {\n            deferred$.reject(err);\n        });\n        return deferred$.promise;\n    }\n    return response$;\n}\nexports.decompressedResponseMap = new WeakMap();\nconst supportedEncodingsByFetchAPI = new WeakMap();\nfunction getSupportedEncodings(fetchAPI) {\n    let supportedEncodings = supportedEncodingsByFetchAPI.get(fetchAPI);\n    if (!supportedEncodings) {\n        const possibleEncodings = ['deflate', 'gzip', 'deflate-raw', 'br'];\n        if (fetchAPI.DecompressionStream['supportedFormats']) {\n            supportedEncodings = fetchAPI.DecompressionStream['supportedFormats'];\n        }\n        else {\n            supportedEncodings = possibleEncodings.filter(encoding => {\n                // deflate-raw is not supported in Node.js >v20\n                if (globalThis.process?.version?.startsWith('v2') &&\n                    fetchAPI.DecompressionStream === globalThis.DecompressionStream &&\n                    encoding === 'deflate-raw') {\n                    return false;\n                }\n                try {\n                    // eslint-disable-next-line no-new\n                    new fetchAPI.DecompressionStream(encoding);\n                    return true;\n                }\n                catch {\n                    return false;\n                }\n            });\n        }\n        supportedEncodingsByFetchAPI.set(fetchAPI, supportedEncodings);\n    }\n    return supportedEncodings;\n}\nfunction handleResponseDecompression(response, fetchAPI) {\n    const contentEncodingHeader = response?.headers.get('content-encoding');\n    if (!contentEncodingHeader || contentEncodingHeader === 'none') {\n        return response;\n    }\n    if (!response?.body) {\n        return response;\n    }\n    let decompressedResponse = exports.decompressedResponseMap.get(response);\n    if (!decompressedResponse || decompressedResponse.bodyUsed) {\n        let decompressedBody = response.body;\n        const contentEncodings = contentEncodingHeader.split(',');\n        if (!contentEncodings.every(encoding => getSupportedEncodings(fetchAPI).includes(encoding))) {\n            return new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                status: 415,\n                statusText: 'Unsupported Media Type',\n            });\n        }\n        for (const contentEncoding of contentEncodings) {\n            decompressedBody = decompressedBody.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n        }\n        decompressedResponse = new fetchAPI.Response(decompressedBody, response);\n        exports.decompressedResponseMap.set(response, decompressedResponse);\n    }\n    return decompressedResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/uwebsockets.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isUWSResponse = isUWSResponse;\nexports.getRequestFromUWSRequest = getRequestFromUWSRequest;\nexports.sendResponseToUwsOpts = sendResponseToUwsOpts;\nfunction isUWSResponse(res) {\n    return !!res.onData;\n}\nfunction getRequestFromUWSRequest({ req, res, fetchAPI, signal }) {\n    let body;\n    const method = req.getMethod();\n    if (method !== 'get' && method !== 'head') {\n        let controller;\n        body = new fetchAPI.ReadableStream({\n            start(c) {\n                controller = c;\n            },\n        });\n        const readable = body.readable;\n        if (readable) {\n            signal.addEventListener('abort', () => {\n                readable.push(null);\n            });\n            res.onData(function (ab, isLast) {\n                const chunk = Buffer.from(ab, 0, ab.byteLength);\n                readable.push(Buffer.from(chunk));\n                if (isLast) {\n                    readable.push(null);\n                }\n            });\n        }\n        else {\n            let closed = false;\n            signal.addEventListener('abort', () => {\n                if (!closed) {\n                    closed = true;\n                    controller.close();\n                }\n            });\n            res.onData(function (ab, isLast) {\n                const chunk = Buffer.from(ab, 0, ab.byteLength);\n                controller.enqueue(Buffer.from(chunk));\n                if (isLast) {\n                    closed = true;\n                    controller.close();\n                }\n            });\n        }\n    }\n    const headers = new fetchAPI.Headers();\n    req.forEach((key, value) => {\n        headers.append(key, value);\n    });\n    let url = `http://localhost${req.getUrl()}`;\n    const query = req.getQuery();\n    if (query) {\n        url += `?${query}`;\n    }\n    return new fetchAPI.Request(url, {\n        method,\n        headers,\n        body: body,\n        signal,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - not in the TS types yet\n        duplex: 'half',\n    });\n}\nasync function forwardResponseBodyToUWSResponse(uwsResponse, fetchResponse, signal) {\n    for await (const chunk of fetchResponse.body) {\n        if (signal.aborted) {\n            return;\n        }\n        uwsResponse.cork(() => {\n            uwsResponse.write(chunk);\n        });\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.end();\n    });\n}\nfunction sendResponseToUwsOpts(uwsResponse, fetchResponse, signal) {\n    if (!fetchResponse) {\n        uwsResponse.writeStatus('404 Not Found');\n        uwsResponse.end();\n        return;\n    }\n    const bufferOfRes = fetchResponse._buffer;\n    if (signal.aborted) {\n        return;\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.writeStatus(`${fetchResponse.status} ${fetchResponse.statusText}`);\n        for (const [key, value] of fetchResponse.headers) {\n            // content-length causes an error with Node.js's fetch\n            if (key !== 'content-length') {\n                if (key === 'set-cookie') {\n                    const setCookies = fetchResponse.headers.getSetCookie?.();\n                    if (setCookies) {\n                        for (const setCookie of setCookies) {\n                            uwsResponse.writeHeader(key, setCookie);\n                        }\n                        continue;\n                    }\n                }\n                uwsResponse.writeHeader(key, value);\n            }\n        }\n        if (bufferOfRes) {\n            uwsResponse.end(bufferOfRes);\n        }\n    });\n    if (bufferOfRes) {\n        return;\n    }\n    if (!fetchResponse.body) {\n        uwsResponse.end();\n        return;\n    }\n    return forwardResponseBodyToUWSResponse(uwsResponse, fetchResponse, signal);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvdXdlYnNvY2tldHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGdDQUFnQztBQUNoQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDRCQUE0QjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxpQ0FBaUMsYUFBYTtBQUM5QztBQUNBO0FBQ0EsbUJBQW1CLE1BQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxzQkFBc0IsRUFBRSx5QkFBeUI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2V4YW1wbGUtdG9kb3MtYXBwLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvY2pzL3V3ZWJzb2NrZXRzLmpzP2ZmZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzVVdTUmVzcG9uc2UgPSBpc1VXU1Jlc3BvbnNlO1xuZXhwb3J0cy5nZXRSZXF1ZXN0RnJvbVVXU1JlcXVlc3QgPSBnZXRSZXF1ZXN0RnJvbVVXU1JlcXVlc3Q7XG5leHBvcnRzLnNlbmRSZXNwb25zZVRvVXdzT3B0cyA9IHNlbmRSZXNwb25zZVRvVXdzT3B0cztcbmZ1bmN0aW9uIGlzVVdTUmVzcG9uc2UocmVzKSB7XG4gICAgcmV0dXJuICEhcmVzLm9uRGF0YTtcbn1cbmZ1bmN0aW9uIGdldFJlcXVlc3RGcm9tVVdTUmVxdWVzdCh7IHJlcSwgcmVzLCBmZXRjaEFQSSwgc2lnbmFsIH0pIHtcbiAgICBsZXQgYm9keTtcbiAgICBjb25zdCBtZXRob2QgPSByZXEuZ2V0TWV0aG9kKCk7XG4gICAgaWYgKG1ldGhvZCAhPT0gJ2dldCcgJiYgbWV0aG9kICE9PSAnaGVhZCcpIHtcbiAgICAgICAgbGV0IGNvbnRyb2xsZXI7XG4gICAgICAgIGJvZHkgPSBuZXcgZmV0Y2hBUEkuUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICAgICAgc3RhcnQoYykge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIgPSBjO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlYWRhYmxlID0gYm9keS5yZWFkYWJsZTtcbiAgICAgICAgaWYgKHJlYWRhYmxlKSB7XG4gICAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVhZGFibGUucHVzaChudWxsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzLm9uRGF0YShmdW5jdGlvbiAoYWIsIGlzTGFzdCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gQnVmZmVyLmZyb20oYWIsIDAsIGFiLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgICAgICAgIHJlYWRhYmxlLnB1c2goQnVmZmVyLmZyb20oY2h1bmspKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNMYXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlYWRhYmxlLnB1c2gobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsZXQgY2xvc2VkID0gZmFsc2U7XG4gICAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFjbG9zZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzLm9uRGF0YShmdW5jdGlvbiAoYWIsIGlzTGFzdCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gQnVmZmVyLmZyb20oYWIsIDAsIGFiLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShjaHVuaykpO1xuICAgICAgICAgICAgICAgIGlmIChpc0xhc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgZmV0Y2hBUEkuSGVhZGVycygpO1xuICAgIHJlcS5mb3JFYWNoKChrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgIH0pO1xuICAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdCR7cmVxLmdldFVybCgpfWA7XG4gICAgY29uc3QgcXVlcnkgPSByZXEuZ2V0UXVlcnkoKTtcbiAgICBpZiAocXVlcnkpIHtcbiAgICAgICAgdXJsICs9IGA/JHtxdWVyeX1gO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IGZldGNoQVBJLlJlcXVlc3QodXJsLCB7XG4gICAgICAgIG1ldGhvZCxcbiAgICAgICAgaGVhZGVycyxcbiAgICAgICAgYm9keTogYm9keSxcbiAgICAgICAgc2lnbmFsLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgLSBub3QgaW4gdGhlIFRTIHR5cGVzIHlldFxuICAgICAgICBkdXBsZXg6ICdoYWxmJyxcbiAgICB9KTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGZvcndhcmRSZXNwb25zZUJvZHlUb1VXU1Jlc3BvbnNlKHV3c1Jlc3BvbnNlLCBmZXRjaFJlc3BvbnNlLCBzaWduYWwpIHtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIGZldGNoUmVzcG9uc2UuYm9keSkge1xuICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1d3NSZXNwb25zZS5jb3JrKCgpID0+IHtcbiAgICAgICAgICAgIHV3c1Jlc3BvbnNlLndyaXRlKGNodW5rKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHV3c1Jlc3BvbnNlLmNvcmsoKCkgPT4ge1xuICAgICAgICB1d3NSZXNwb25zZS5lbmQoKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHNlbmRSZXNwb25zZVRvVXdzT3B0cyh1d3NSZXNwb25zZSwgZmV0Y2hSZXNwb25zZSwgc2lnbmFsKSB7XG4gICAgaWYgKCFmZXRjaFJlc3BvbnNlKSB7XG4gICAgICAgIHV3c1Jlc3BvbnNlLndyaXRlU3RhdHVzKCc0MDQgTm90IEZvdW5kJyk7XG4gICAgICAgIHV3c1Jlc3BvbnNlLmVuZCgpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGJ1ZmZlck9mUmVzID0gZmV0Y2hSZXNwb25zZS5fYnVmZmVyO1xuICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHV3c1Jlc3BvbnNlLmNvcmsoKCkgPT4ge1xuICAgICAgICB1d3NSZXNwb25zZS53cml0ZVN0YXR1cyhgJHtmZXRjaFJlc3BvbnNlLnN0YXR1c30gJHtmZXRjaFJlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGZldGNoUmVzcG9uc2UuaGVhZGVycykge1xuICAgICAgICAgICAgLy8gY29udGVudC1sZW5ndGggY2F1c2VzIGFuIGVycm9yIHdpdGggTm9kZS5qcydzIGZldGNoXG4gICAgICAgICAgICBpZiAoa2V5ICE9PSAnY29udGVudC1sZW5ndGgnKSB7XG4gICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNldENvb2tpZXMgPSBmZXRjaFJlc3BvbnNlLmhlYWRlcnMuZ2V0U2V0Q29va2llPy4oKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNldENvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2V0Q29va2llIG9mIHNldENvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1d3NSZXNwb25zZS53cml0ZUhlYWRlcihrZXksIHNldENvb2tpZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB1d3NSZXNwb25zZS53cml0ZUhlYWRlcihrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoYnVmZmVyT2ZSZXMpIHtcbiAgICAgICAgICAgIHV3c1Jlc3BvbnNlLmVuZChidWZmZXJPZlJlcyk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoYnVmZmVyT2ZSZXMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIWZldGNoUmVzcG9uc2UuYm9keSkge1xuICAgICAgICB1d3NSZXNwb25zZS5lbmQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXR1cm4gZm9yd2FyZFJlc3BvbnNlQm9keVRvVVdTUmVzcG9uc2UodXdzUmVzcG9uc2UsIGZldGNoUmVzcG9uc2UsIHNpZ25hbCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\n");

/***/ })

};
;